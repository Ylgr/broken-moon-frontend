{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","components/common/Radio/Radio.styles.ts","components/common/Radio/Radio.tsx","constants/patterns.ts","components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.styles.ts","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/CurrentPasswordItem/CurrentPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/PasswordForm/PasswordForm.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/PasswordForm/PasswordForm.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorSwitch/TwoFactorSwitch.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorAuth.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorAuth.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/SecuritySettings.tsx","pages/SecuritySettingsPage.tsx"],"names":["BaseButtonsForm","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","BaseForm","useForm","formDefault","currentForm","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","BaseButtonsGroup","className","t","useTranslation","gutter","wrap","span","block","type","onClick","htmlType","Radio","styled","AntdRadio","RadioButton","Button","RadioGroup","Group","passwordPattern","RegExp","websitePattern","EmailItem","required","verified","name","$isSuccess","$successText","label","rules","message","disabled","PhoneNumberInput","PhoneInput","BORDER_RADIUS","PhoneItem","validator","_","value","isValidPhoneNumber","Promise","resolve","reject","Error","ConfirmItemPassword","dependencies","getFieldValue","InputPassword","CurrentPasswordItem","NewPasswordItem","pattern","Btn","media","md","xl","PasswordForm","useState","isLoading","setLoading","requiredMark","onFieldsChange","onFinish","values","setTimeout","notificationController","success","console","log","xs","RadioBtn","$isActive","TwoFactorOptions","selectedOption","setSelectedOption","user","useAppSelector","state","useMemo","isPhoneActive","isEmailActive","onClickInput","useCallback","mode","useEffect","email","phone","onChange","e","target","TwoFactorSwitch","isEnabled","setEnabled","justify","align","checked","AuthModal","Modal","TwoFactorAuth","isNeedToShowVerifyBtn","number","Boolean","isClickedVerify","setClickedVerify","dispatch","useAppDispatch","onVerify","newUser","setUser","initialValues","destroyOnClose","visible","closable","SecurityCodeForm","onBack","SecuritySettings","Card","SecuritySettingsPage","PageTitle"],"mappings":"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","file":"static/js/11.edd28003.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React, { ComponentProps } from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\n\ninterface BaseButtonsGroupProps extends ComponentProps<typeof Button> {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className={className} gutter={[10, 10]} wrap={false}>\n      <Col span={12}>\n        <Button block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import styled from 'styled-components';\nimport { Radio as AntdRadio } from 'antd';\n\nexport const Radio = styled(AntdRadio)`\n  .ant-radio-disabled + span {\n    color: var(--disabled-color);\n  }\n`;\n\nexport const RadioButton = styled(AntdRadio.Button)`\n  &.ant-radio-button-wrapper-disabled {\n    color: var(--disabled-color);\n  }\n`;\n","import { Radio as AntdRadio, RadioProps } from 'antd';\nimport * as S from './Radio.styles';\n\nexport interface RadioChangeEventTarget extends RadioProps {\n  checked: boolean;\n}\nexport interface RadioChangeEvent {\n  target: RadioChangeEventTarget;\n  stopPropagation: () => void;\n  preventDefault: () => void;\n  nativeEvent: MouseEvent;\n}\n\nexport const { Group: RadioGroup } = AntdRadio;\n\nexport const Radio: React.FC<RadioProps> = (props) => {\n  return <S.Radio {...props} />;\n};\n\nexport const RadioButton: React.FC<RadioProps> = (props) => {\n  return <S.RadioButton {...props} />;\n};\n","export const passwordPattern = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/);\n\nexport const websitePattern = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?/gi;\n","import React from 'react';\nimport { FormItemProps } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\ninterface EmailItemProps extends FormItemProps {\n  verified?: boolean;\n  onClick?: () => void;\n}\n\nexport const EmailItem: React.FC<EmailItemProps> = ({ required, onClick, verified, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"email\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.email')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        {\n          type: 'email',\n          message: t('common.notValidEmail'),\n        },\n      ]}\n      {...props}\n    >\n      <Input disabled={verified} onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import { BORDER_RADIUS } from '@app/styles/themes/constants';\nimport PhoneInput from 'react-phone-number-input/input';\nimport styled from 'styled-components';\n\nexport const PhoneNumberInput = styled(PhoneInput)`\n  height: 50px;\n  width: 100%;\n  padding: 8px 11px;\n  transition: all 0.3s;\n\n  color: var(--text-main-color);\n\n  border: 1px solid var(--border-color);\n\n  border-radius: ${BORDER_RADIUS};\n\n  &:hover {\n    border-color: #1d72b8;\n  }\n\n  &:focus {\n    outline: 0;\n    box-shadow: 0 0 0 2px rgb(0 89 171 / 20%);\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport * as S from './PhoneItem.styles';\n\ninterface PhoneItemsProps {\n  required?: boolean;\n  onClick?: () => void;\n  verified?: boolean;\n}\n\nexport const PhoneItem: React.FC<PhoneItemsProps> = ({ required, onClick, verified }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"phone\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.phone')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        () => ({\n          validator(_, value) {\n            if (!value || isValidPhoneNumber(value)) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.personalInfo.wrongNumber')));\n          },\n        }),\n      ]}\n    >\n      <S.PhoneNumberInput disabled={verified} className=\"ant-input\" onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\n\nexport const ConfirmItemPassword: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"confirmPassword\"\n      label={t('profile.nav.securitySettings.confirmPassword')}\n      dependencies={['newPassword']}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n        ({ getFieldValue }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('newPassword') === value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.securitySettings.dontMatchPassword')));\n          },\n        }),\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\n\nexport const CurrentPasswordItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"password\"\n      label={t('profile.nav.securitySettings.currentPassword')}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport { passwordPattern } from '@app/constants/patterns';\n\nexport const NewPasswordItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"newPassword\"\n      label={t('profile.nav.securitySettings.newPassword')}\n      dependencies={['password']}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n        {\n          pattern: passwordPattern,\n          message: t('profile.nav.securitySettings.notValidPassword'),\n        },\n        ({ getFieldValue }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') !== value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.securitySettings.samePassword')));\n          },\n        }),\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import { Button } from '@app/components/common/buttons/Button/Button';\nimport { media } from '@app/styles/themes/constants';\nimport styled from 'styled-components';\n\nexport const Btn = styled(Button)`\n  margin: 0.5rem 0 1.5rem 0;\n  width: 100%;\n\n  @media only screen and ${media.md} {\n    max-width: 10rem;\n  }\n\n  @media only screen and ${media.xl} {\n    max-width: unset;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { ConfirmItemPassword } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem';\nimport { CurrentPasswordItem } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/CurrentPasswordItem/CurrentPasswordItem';\nimport { NewPasswordItem } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem';\nimport { notificationController } from '@app/controllers/notificationController';\nimport * as S from './PasswordForm.styles';\n\nexport const PasswordForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const onFinish = (values: []) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm\n      name=\"newPassword\"\n      requiredMark=\"optional\"\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n      footer={\n        <S.Btn loading={isLoading} type=\"primary\" htmlType=\"submit\">\n          {t('common.confirm')}\n        </S.Btn>\n      }\n      onFinish={onFinish}\n    >\n      <Row gutter={{ md: 15, xl: 30 }}>\n        <Col span={24}>\n          <BaseButtonsForm.Item>\n            <BaseButtonsForm.Title>{t('profile.nav.securitySettings.changePassword')}</BaseButtonsForm.Title>\n          </BaseButtonsForm.Item>\n        </Col>\n\n        <Col xs={24} md={12} xl={24}>\n          <CurrentPasswordItem />\n        </Col>\n\n        <Col xs={24} md={12} xl={24}>\n          <NewPasswordItem />\n        </Col>\n\n        <Col xs={24} md={12} xl={24}>\n          <ConfirmItemPassword />\n        </Col>\n      </Row>\n    </BaseButtonsForm>\n  );\n};\n","import styled from 'styled-components';\nimport { Radio } from '@app/components/common/Radio/Radio';\n\ninterface RadioBtnProps {\n  $isActive: boolean;\n}\n\nexport const RadioBtn = styled(Radio)<RadioBtnProps>`\n  margin-right: 0;\n  width: 100%;\n  transition: all 0.5s ease;\n\n  ${(props) => !props.$isActive && 'opacity: 0.5'};\n\n  & > span:last-of-type {\n    flex-grow: 1;\n  }\n`;\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { RadioGroup } from '@app/components/common/Radio/Radio';\nimport { EmailItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem';\nimport { PhoneItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { TwoFactorAuthOption } from '@app/interfaces/interfaces';\nimport { TwoFactorAuthOptionState } from '../TwoFactorAuth';\nimport * as S from './TwoFactorOptions.styles';\n\ninterface TwoFactorOptionsProps {\n  selectedOption: TwoFactorAuthOptionState;\n  setSelectedOption: (state: TwoFactorAuthOptionState) => void;\n}\n\nexport const TwoFactorOptions: React.FC<TwoFactorOptionsProps> = ({ selectedOption, setSelectedOption }) => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const { isEmailActive, isPhoneActive } = useMemo(\n    () => ({\n      isPhoneActive: selectedOption === 'phone',\n      isEmailActive: selectedOption === 'email',\n    }),\n    [selectedOption],\n  );\n\n  const onClickInput = useCallback(\n    (mode: TwoFactorAuthOption) => () => {\n      setSelectedOption(mode);\n    },\n    [setSelectedOption],\n  );\n\n  useEffect(() => {\n    if (user?.email.verified && user?.phone.verified) {\n      setSelectedOption(null);\n    }\n  }, [setSelectedOption, user?.email.verified, user?.phone.verified]);\n\n  return (\n    <>\n      <RadioGroup value={selectedOption} onChange={(e) => setSelectedOption(e.target.value)}>\n        <S.RadioBtn value=\"phone\" $isActive={isPhoneActive} disabled={user?.phone.verified}>\n          <PhoneItem required={isPhoneActive} onClick={onClickInput('phone')} verified={user?.phone.verified} />\n        </S.RadioBtn>\n        <S.RadioBtn value=\"email\" $isActive={isEmailActive} disabled={user?.email.verified}>\n          <EmailItem required={isEmailActive} onClick={onClickInput('email')} verified={user?.email.verified} />\n        </S.RadioBtn>\n      </RadioGroup>\n    </>\n  );\n};\n","import React from 'react';\nimport { Col, Row, Switch } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\ninterface TwoFactorSwitchProps {\n  isEnabled: boolean;\n  setEnabled: (state: boolean) => void;\n}\n\nexport const TwoFactorSwitch: React.FC<TwoFactorSwitchProps> = ({ isEnabled, setEnabled }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item>\n      <Row gutter={[10, 10]} justify=\"space-between\" align=\"middle\">\n        <Col span={20}>\n          <BaseButtonsForm.Title>{t('profile.nav.securitySettings.twoFactorAuth')}</BaseButtonsForm.Title>\n        </Col>\n        <Col span={4}>\n          <Row justify=\"end\">\n            <Col>\n              <BaseButtonsForm.Item name=\"2fa\">\n                <Switch checked={isEnabled} onChange={setEnabled} />\n              </BaseButtonsForm.Item>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </BaseButtonsForm.Item>\n  );\n};\n","import styled from 'styled-components';\nimport { Modal } from '@app/components/common/Modal/Modal';\n\nexport const AuthModal = styled(Modal)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { TwoFactorOptions } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions';\nimport { TwoFactorSwitch } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorSwitch/TwoFactorSwitch';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { SecurityCodeForm } from '@app/components/auth/SecurityCodeForm/SecurityCodeForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { setUser } from '@app/store/slices/userSlice';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { TwoFactorAuthOption } from '@app/interfaces/interfaces';\nimport * as S from './TwoFactorAuth.styles';\n\nexport interface CurrentOption {\n  value: 'phone' | 'email';\n  isVerified: boolean;\n}\n\nexport type TwoFactorAuthOptionState = TwoFactorAuthOption | null;\n\nexport const TwoFactorAuth: React.FC = () => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const isNeedToShowVerifyBtn = useMemo(\n    () => (user?.email.name && !user?.email.verified) || (user?.phone.number && !user?.phone.verified),\n    [user],\n  );\n\n  const [isFieldsChanged, setFieldsChanged] = useState(Boolean(isNeedToShowVerifyBtn));\n  const [isLoading, setLoading] = useState(false);\n\n  const [isEnabled, setEnabled] = useState(Boolean(user?.email.verified || user?.phone.verified));\n  const [selectedOption, setSelectedOption] = useState<TwoFactorAuthOptionState>('email');\n  const [isClickedVerify, setClickedVerify] = useState(false);\n\n  const dispatch = useAppDispatch();\n\n  const { t } = useTranslation();\n\n  const onClickVerify = () => {\n    setClickedVerify(true);\n  };\n\n  const onVerify = useCallback(() => {\n    if (user && selectedOption) {\n      setLoading(false);\n      setFieldsChanged(false);\n      setClickedVerify(false);\n      notificationController.success({ message: t('common.success') });\n\n      const newUser = { ...user, [selectedOption]: { ...user[selectedOption], verified: true } };\n      dispatch(setUser(newUser));\n    }\n  }, [dispatch, selectedOption, t, user]);\n\n  return (\n    <>\n      <BaseButtonsForm\n        name=\"twoFactorAuth\"\n        requiredMark=\"optional\"\n        isFieldsChanged={isFieldsChanged}\n        onFieldsChange={() => setFieldsChanged(true)}\n        initialValues={{\n          email: user?.email.name,\n          phone: user?.phone.number,\n        }}\n        footer={\n          (isEnabled && (\n            <Button type=\"link\" loading={isLoading} htmlType=\"submit\">\n              {t('profile.nav.securitySettings.verify')}\n            </Button>\n          )) || <span />\n        }\n        onFinish={onClickVerify}\n      >\n        <Row>\n          <Col span={24}>\n            <TwoFactorSwitch isEnabled={isEnabled} setEnabled={setEnabled} />\n          </Col>\n\n          {isEnabled && (\n            <Col span={24}>\n              <TwoFactorOptions selectedOption={selectedOption} setSelectedOption={setSelectedOption} />\n            </Col>\n          )}\n        </Row>\n      </BaseButtonsForm>\n      <S.AuthModal\n        destroyOnClose\n        visible={isClickedVerify}\n        footer={false}\n        closable={false}\n        onCancel={() => setClickedVerify(false)}\n      >\n        <SecurityCodeForm onBack={() => setClickedVerify(false)} onFinish={onVerify} />\n      </S.AuthModal>\n    </>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'antd';\nimport { Card } from 'components/common/Card/Card';\nimport { PasswordForm } from './passwordForm/PasswordForm/PasswordForm';\nimport { TwoFactorAuth } from './twoFactorAuth/TwoFactorAuth';\n\nexport const SecuritySettings: React.FC = () => (\n  <Card>\n    <Row gutter={[30, 0]}>\n      <Col xs={24} xl={10}>\n        <PasswordForm />\n      </Col>\n\n      <Col xs={24} xl={14}>\n        <TwoFactorAuth />\n      </Col>\n    </Row>\n  </Card>\n);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SecuritySettings } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/SecuritySettings';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\n\nconst SecuritySettingsPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('profile.nav.securitySettings.title')}</PageTitle>\n      <SecuritySettings />\n    </>\n  );\n};\n\nexport default SecuritySettingsPage;\n"],"sourceRoot":""}