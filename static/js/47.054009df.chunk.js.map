{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/MinusOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusOutlined.js","components/common/Progress/Progress.styles.ts","components/common/Progress/Progress.tsx","pages/uiComponentsPages/feedback/ProgressPage.tsx"],"names":["MinusOutlined","props","ref","React","AntdIcon","_objectSpread","icon","MinusOutlinedSvg","displayName","Progress","styled","AntProgress","ProgressPage","useState","percent","setPercent","t","useTranslation","primaryColor","secondaryColor","successColor","errorColor","dynamicSuccessColor","useMemo","PageTitle","title","strokeColor","status","showInfo","type","Button","onClick","newPercent","PlusOutlined","gapDegree","from","to"],"mappings":"kLAEeA,EADK,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gGAAoG,KAAQ,QAAS,MAAS,Y,QCMrRA,EAAgB,SAAuBC,EAAOC,GAChD,OAAoBC,gBAAoBC,IAAUC,YAAcA,YAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMC,MAIVP,EAAcQ,YAAc,gBACAL,I,EAAAA,eAAiBH,G,wCCZhCS,EAAWC,kBAAOC,IAAPD,CAAH,0B,OCCRD,EAAoC,SAACR,GAChD,OAAO,cAAC,EAAD,eAAgBA,K,yBCqGVW,UAjGgB,WAC7B,MAA8BC,mBAAiB,GAA/C,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAMC,cAAND,EAEFE,EAAe,uBACfC,EAAiB,yBACjBC,EAAe,uBACfC,EAAa,qBAEbC,EAAsBC,mBAAQ,kBAAmB,MAAZT,EAAkBM,EAAeF,IAAe,CAACJ,IAkB5F,OACE,qCACE,cAACU,EAAA,EAAD,UAAYR,EAAE,qBACd,eAAC,IAAD,WACE,eAAC,IAAD,CAAQS,MAAOT,EAAE,kBAAjB,UACE,cAAC,EAAD,CAAUF,QAAS,GAAIY,YAAaR,IACpC,cAAC,EAAD,CAAUJ,QAAS,GAAIa,OAAO,SAASD,YAAaR,IACpD,cAAC,EAAD,CAAUJ,QAAS,GAAIa,OAAO,YAAYD,YAAaL,IACvD,cAAC,EAAD,CAAUP,QAAS,IAAKY,YAAaN,IACrC,cAAC,EAAD,CAAUN,QAAS,GAAIc,UAAU,EAAOF,YAAaR,OAEvD,eAAC,IAAD,CAAQO,MAAOT,EAAE,mBAAjB,UACE,cAAC,EAAD,CAAUa,KAAK,SAASf,QAAS,GAAIY,YAAaR,IAClD,cAAC,EAAD,CAAUW,KAAK,SAASf,QAAS,GAAIa,OAAO,YAAYD,YAAaL,IACrE,cAAC,EAAD,CAAUQ,KAAK,SAASf,QAAS,IAAKY,YAAaN,OAErD,cAAC,IAAD,CAAQK,MAAOT,EAAE,oBAAjB,SACE,gCACE,cAAC,EAAD,CAAUF,QAASA,EAASe,KAAK,SAASH,YAAaJ,IACvD,cAAC,EAAD,CAAUR,QAASA,EAASY,YAAaJ,IACzC,eAACQ,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CAAQC,QA7BH,WACf,IAAIC,EAAalB,EAAU,GACvBkB,EAAa,IACfA,EAAa,GAEfjB,EAAWiB,IAwB0B1B,KAAM,cAAC,EAAD,MACjC,cAACwB,EAAA,EAAD,CAAQC,QAtCH,WACf,IAAIC,EAAalB,EAAU,GACvBkB,EAAa,MACfA,EAAa,KAEfjB,EAAWiB,IAiC0B1B,KAAM,cAAC2B,EAAA,EAAD,cAIvC,eAAC,IAAD,CAAQR,MAAOT,EAAE,8BAAjB,UACE,cAAC,EAAD,CAAUa,KAAK,YAAYf,QAAS,GAAIY,YAAaR,IACrD,cAAC,EAAD,CAAUW,KAAK,YAAYf,QAAS,GAAIoB,UAAW,GAAIR,YAAaR,OAEtE,cAAC,IAAD,CAAQO,MAAOT,EAAE,qBAAjB,SACE,gCACE,cAAC,EAAD,CACEU,YAAa,CACX,KAAMR,EACN,OAAQC,GAEVL,QAAS,OAEX,cAAC,EAAD,CACEY,YAAa,CACXS,KAAMjB,EACNkB,GAAIjB,GAENL,QAAS,KACTa,OAAO,WAET,cAAC,EAAD,CACEE,KAAK,SACLH,YAAa,CACX,KAAMR,EACN,OAAQC,GAEVL,QAAS,KAEX,cAAC,EAAD,CACEe,KAAK,SACLH,YAAa,CACX,KAAMR,EACN,OAAQC,GAEVL,QAAS","file":"static/js/47.054009df.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar MinusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"minus\", \"theme\": \"outlined\" };\nexport default MinusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusOutlined = function MinusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusOutlinedSvg\n  }));\n};\n\nMinusOutlined.displayName = 'MinusOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusOutlined);","import styled from 'styled-components';\nimport { Progress as AntProgress } from 'antd';\n\nexport const Progress = styled(AntProgress)``;\n","import React from 'react';\nimport { ProgressProps } from 'antd';\nimport * as S from './Progress.styles';\n\nexport const Progress: React.FC<ProgressProps> = (props) => {\n  return <S.Progress {...props} />;\n};\n","import { useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col } from 'antd';\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Progress } from '@app/components/common/Progress/Progress';\nimport { Button, ButtonGroup } from '@app/components/common/buttons/Button/Button';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\n\nconst ProgressPage: React.FC = () => {\n  const [percent, setPercent] = useState<number>(0);\n  const { t } = useTranslation();\n\n  const primaryColor = 'var(--primary-color)';\n  const secondaryColor = 'var(--secondary-color)';\n  const successColor = 'var(--success-color)';\n  const errorColor = 'var(--error-color)';\n\n  const dynamicSuccessColor = useMemo(() => (percent === 100 ? successColor : primaryColor), [percent]);\n\n  const increase = () => {\n    let newPercent = percent + 10;\n    if (newPercent > 100) {\n      newPercent = 100;\n    }\n    setPercent(newPercent);\n  };\n\n  const decrease = () => {\n    let newPercent = percent - 10;\n    if (newPercent < 0) {\n      newPercent = 0;\n    }\n    setPercent(newPercent);\n  };\n\n  return (\n    <>\n      <PageTitle>{t('common.progress')}</PageTitle>\n      <Col>\n        <S.Card title={t('progress.basic')}>\n          <Progress percent={30} strokeColor={primaryColor} />\n          <Progress percent={50} status=\"active\" strokeColor={primaryColor} />\n          <Progress percent={70} status=\"exception\" strokeColor={errorColor} />\n          <Progress percent={100} strokeColor={successColor} />\n          <Progress percent={50} showInfo={false} strokeColor={primaryColor} />\n        </S.Card>\n        <S.Card title={t('progress.circle')}>\n          <Progress type=\"circle\" percent={75} strokeColor={primaryColor} />\n          <Progress type=\"circle\" percent={70} status=\"exception\" strokeColor={errorColor} />\n          <Progress type=\"circle\" percent={100} strokeColor={successColor} />\n        </S.Card>\n        <S.Card title={t('progress.dynamic')}>\n          <div>\n            <Progress percent={percent} type=\"circle\" strokeColor={dynamicSuccessColor} />\n            <Progress percent={percent} strokeColor={dynamicSuccessColor} />\n            <ButtonGroup>\n              <Button onClick={decrease} icon={<MinusOutlined />} />\n              <Button onClick={increase} icon={<PlusOutlined />} />\n            </ButtonGroup>\n          </div>\n        </S.Card>\n        <S.Card title={t('progress.medical-dashboard')}>\n          <Progress type=\"dashboard\" percent={75} strokeColor={primaryColor} />\n          <Progress type=\"dashboard\" percent={75} gapDegree={30} strokeColor={primaryColor} />\n        </S.Card>\n        <S.Card title={t('progress.gradient')}>\n          <div>\n            <Progress\n              strokeColor={{\n                '0%': primaryColor,\n                '100%': secondaryColor,\n              }}\n              percent={99.9}\n            />\n            <Progress\n              strokeColor={{\n                from: primaryColor,\n                to: secondaryColor,\n              }}\n              percent={99.9}\n              status=\"active\"\n            />\n            <Progress\n              type=\"circle\"\n              strokeColor={{\n                '0%': primaryColor,\n                '100%': secondaryColor,\n              }}\n              percent={90}\n            />\n            <Progress\n              type=\"circle\"\n              strokeColor={{\n                '0%': primaryColor,\n                '100%': secondaryColor,\n              }}\n              percent={100}\n            />\n          </div>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default ProgressPage;\n"],"sourceRoot":""}