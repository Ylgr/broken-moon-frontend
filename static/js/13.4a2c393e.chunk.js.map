{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Status/Status.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Status/Status.tsx","constants/paymentStatuses.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentHistory/PaymentHistory.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentHistory/PaymentHistory.tsx","api/paymentHistory.api.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCard/PaymentCard.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCard/PaymentCard.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/ActionButtons/ActionButtons.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/ActionButtons/ActionButtons.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardButton/AddNewCardButton.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardNumberItem/CardNumberItem.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardholderItem/CardholderItem.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/ExpDateItem/ExpDateItem.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CVVItem/CVVItem.tsx","constants/cardThemes.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardThemeItem/CardThemeItem.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardThemeItem/CardThemeItem.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/PaymentForm/PaymentForm.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/PaymentForm/PaymentForm.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardModal.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardButton/AddNewCardButton.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCardsWidget.tsx","constants/cards.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentMethod.tsx","components/profile/profileCard/profileFormNav/nav/payments/Payments.tsx","pages/PaymentsPage.tsx"],"names":["BaseButtonsForm","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","BaseForm","useForm","formDefault","currentForm","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","BaseButtonsGroup","className","t","useTranslation","gutter","wrap","span","block","type","onClick","htmlType","StatusTag","styled","Tag","media","md","Status","color","text","paymentStatuses","id","name","priority","Priority","LOW","INFO","MEDIUM","HIGH","Header","div","AvatarWrapper","Text","Typography","ContentWrapper","Subtitle","DetailsWrapper","Payment","src","recipient","date","status","price","currency","paymentStatus","useMemo","find","item","alt","shape","Dates","format","defineColorByPriority","getCurrencyPrice","Button","PaymentHistoryTable","Table","RecipientWrapper","PaymentsTable","payments","columns","title","dataIndex","key","render","img","align","sorter","a","b","toUpperCase","dataSource","map","payment","index","imgUrl","totalAmount","amount","details","size","pagination","isEmptyHistory","defaultPaddings","mobile","tablet","xl","PaymentHistory","useState","history","setHistory","useResponsive","mobileOnly","isTablet","useEffect","Promise","res","setTimeout","then","content","length","Card","Wrapper","$background","PaymentCard","cardData","background","BtnWrapper","ActionButtons","onRemove","onConfirm","icon","DeleteOutlined","AddBtn","CardNumberItem","disabled","handleInputFocus","label","rules","required","message","placeholderChar","placeholder","mask","onFocus","CardholderItem","Input","ExpDateItem","CVVItem","cardThemes","BackgroundWrapper","BORDER_RADIUS","isActive","Theme","CardThemeItem","setCardData","handleChange","useCallback","themes","xs","tabIndex","PayCard","FormItemsWrapper","clearCardData","cvc","expiry","number","focused","isEdit","PaymentForm","closeModal","onFormFinish","isLoading","setLoading","Form","event","target","onFinish","values","card","setFieldsValue","requiredMark","initialValues","onValuesChange","field","Object","entries","onFieldsChange","AddNewCardModal","isModalVisible","onCardAdd","Modal","destroyOnClose","visible","closable","AddNewCardButton","setModalVisible","PaymentCardsWidget","cards","onCardRemove","justify","useMediaQuery","query","PaymentMethod","initialCards","setCards","cardNumber","filter","Payments","PaymentsPage","PageTitle"],"mappings":"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","file":"static/js/13.4a2c393e.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React, { ComponentProps } from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\n\ninterface BaseButtonsGroupProps extends ComponentProps<typeof Button> {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className={className} gutter={[10, 10]} wrap={false}>\n      <Col span={12}>\n        <Button block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import styled from 'styled-components';\nimport { Tag } from 'antd';\nimport { media } from '@app/styles/themes/constants';\n\nexport const StatusTag = styled(Tag)`\n  padding: 0.375rem 0;\n  min-width: 7.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n\n  @media only screen and ${media.md} {\n    min-width: 6.5rem;\n  }\n`;\n","import React from 'react';\nimport * as S from './Status.styles';\n\ninterface StatusProps {\n  color: string;\n  text: string;\n}\n\nexport const Status: React.FC<StatusProps> = ({ color, text }) => <S.StatusTag color={color}>{text}</S.StatusTag>;\n","import { Priority } from './enums/priorities';\n\nexport interface PaymentStatus {\n  id: number;\n  name: string;\n  priority: Priority;\n}\n\nexport const paymentStatuses: PaymentStatus[] = [\n  {\n    id: 1,\n    name: 'profile.nav.payments.status.paid',\n    priority: Priority.LOW,\n  },\n  {\n    id: 2,\n    name: 'profile.nav.payments.status.scheduled',\n    priority: Priority.INFO,\n  },\n  {\n    id: 3,\n    name: 'profile.nav.payments.status.pending',\n    priority: Priority.MEDIUM,\n  },\n  {\n    id: 4,\n    name: 'profile.nav.payments.status.failed',\n    priority: Priority.HIGH,\n  },\n];\n","import styled from 'styled-components';\nimport { Typography } from 'antd';\n\nexport const Header = styled.div`\n  padding: 1.5rem 3.5rem;\n  display: flex;\n  align-items: center;\n\n  background-color: var(--secondary-background-color);\n`;\n\nexport const AvatarWrapper = styled.div`\n  width: 2rem;\n  margin-right: 1.25rem;\n`;\n\nexport const Text = styled(Typography.Text)`\n  font-weight: 600;\n`;\n\nexport const ContentWrapper = styled.div`\n  padding: 1rem 2rem;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    height: 1px;\n\n    background-color: 1px solid rgba(var(--primary-rgb-color), 0.3);\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n\n  &:nth-last-of-type(1) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Subtitle = styled(Typography.Text)`\n  font-weight: 500;\n  font-size: 0.75rem;\n\n  color: var(--primary-color);\n`;\n\nexport const DetailsWrapper = styled.div`\n  padding: 0.8rem;\n  text-align: center;\n`;\n","import React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Avatar } from 'antd';\nimport { defineColorByPriority, getCurrencyPrice } from 'utils/utils';\nimport { paymentStatuses } from 'constants/paymentStatuses';\nimport { Dates } from 'constants/Dates';\nimport { Status } from '../Status/Status';\nimport * as S from './Payment.styles';\nimport { Button } from 'components/common/buttons/Button/Button';\nimport { CurrencyType } from '@app/interfaces/interfaces';\n\ninterface PaymentProps {\n  src: string;\n  recipient: string;\n  date: number;\n  status: number;\n  price: number;\n  currency: CurrencyType;\n}\n\nexport const Payment: React.FC<PaymentProps> = ({ src, recipient, date, status, price, currency }) => {\n  const { t } = useTranslation();\n\n  const paymentStatus = useMemo(() => paymentStatuses.find((item) => item.id === status), [status]);\n\n  return paymentStatus ? (\n    <>\n      <S.Header>\n        <S.AvatarWrapper>\n          <Avatar src={src} alt={recipient} shape=\"circle\" />\n        </S.AvatarWrapper>\n        <S.Text>{recipient}</S.Text>\n      </S.Header>\n      <S.ContentWrapper>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.date')}</S.Subtitle>\n          <S.Text>{Dates.format(date, 'LL')}</S.Text>\n        </S.Item>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.status.title')}</S.Subtitle>\n          <Status color={defineColorByPriority(paymentStatus.priority)} text={t(paymentStatus.name)} />\n        </S.Item>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.date')}</S.Subtitle>\n          <S.Text>{getCurrencyPrice(price, currency)}</S.Text>\n        </S.Item>\n      </S.ContentWrapper>\n      <S.DetailsWrapper>\n        <Button type=\"link\">{t('profile.nav.payments.details')}</Button>\n      </S.DetailsWrapper>\n    </>\n  ) : null;\n};\n","import styled from 'styled-components';\nimport { Table } from 'antd';\n\nexport const PaymentHistoryTable = styled(Table)`\n  .ant-table-thead > tr > th {\n    border-top: 1px solid rgba(var(--primary-rgb-color), 0.3);\n\n    border-bottom: 1px solid rgba(var(--primary-rgb-color), 0.3);\n\n    color: var(--primary-color);\n\n    text-align: center;\n\n    &::before {\n      display: none;\n    }\n  }\n\n  .ant-table-tbody > tr > td {\n    border-bottom: 1px solid rgba(var(--primary--rgb-color), 0.3);\n\n    font-weight: 600;\n    font-size: 1rem;\n  }\n`;\n\nexport const RecipientWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: left;\n\n  & > span:first-of-type {\n    margin-right: 0.5rem;\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { Avatar } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { ColumnType } from 'antd/lib/table';\nimport { Dates } from 'constants/Dates';\nimport { Status } from '../Status/Status';\nimport { paymentStatuses, PaymentStatus } from 'constants/paymentStatuses';\nimport { defineColorByPriority, getCurrencyPrice } from 'utils/utils';\nimport { Payment } from 'api/paymentHistory.api';\nimport * as S from './PaymentsTable.styles';\nimport { Button } from 'components/common/buttons/Button/Button';\n\ninterface Recipient {\n  name: string;\n  img: string;\n}\n\ninterface Status {\n  key: number;\n  recipient: Recipient;\n  date: number;\n  status: PaymentStatus | undefined;\n  totalAmount: string | React.ReactNode;\n}\n\ninterface PaymentsTableProps {\n  payments: Payment[];\n}\n\nexport const PaymentsTable: React.FC<PaymentsTableProps> = ({ payments }) => {\n  const { t } = useTranslation();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const columns: ColumnType<any>[] = useMemo(() => {\n    return [\n      {\n        title: t('profile.nav.payments.recipient'),\n        dataIndex: 'recipient',\n        key: 'recipient',\n        render: (recipient: Recipient) => (\n          <S.RecipientWrapper>\n            <Avatar src={recipient.img} alt={recipient.name} />\n            {recipient.name}\n          </S.RecipientWrapper>\n        ),\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.date'),\n        dataIndex: 'date',\n        key: 'date',\n        render: (text: string) => Dates.format(text, 'LL'),\n        sorter: (a, b) => a.date - b.date,\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.status.title'),\n        dataIndex: 'status',\n        key: 'status',\n        render: (status: PaymentStatus) => (\n          <Status color={defineColorByPriority(status.priority)} text={t(status.name).toUpperCase()} />\n        ),\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.totalAmount'),\n        dataIndex: 'totalAmount',\n        key: 'totalAmount',\n        align: 'center',\n      },\n      {\n        title: '',\n        dataIndex: 'details',\n        key: 'details',\n        align: 'center',\n        render: () => <Button type=\"link\">{t('profile.nav.payments.details')}</Button>,\n      },\n    ];\n  }, [t]);\n\n  const dataSource: Status[] = useMemo(\n    () =>\n      payments.map((payment, index) => {\n        return {\n          key: index,\n          recipient: {\n            name: payment.recipient,\n            img: payment.imgUrl,\n          },\n          date: payment.date,\n          status: paymentStatuses.find((status) => status.id === payment.status),\n          totalAmount: getCurrencyPrice(payment.amount, payment.currency),\n          details: payment,\n        };\n      }),\n    [payments],\n  );\n\n  return <S.PaymentHistoryTable size=\"middle\" columns={columns} dataSource={dataSource} pagination={false} />;\n};\n","import { Typography } from 'antd';\nimport styled from 'styled-components';\nimport { defaultPaddings } from '@app/constants/defaultPaddings';\nimport { media } from '@app/styles/themes/constants';\n\ninterface ContentWrapperProps {\n  isEmptyHistory: boolean;\n}\n\nexport const ContentWrapper = styled.div<ContentWrapperProps>`\n  ${(props) =>\n    !props.isEmptyHistory &&\n    `margin: 0 -${defaultPaddings.mobile[1]}px -${defaultPaddings.mobile[0]}px -${defaultPaddings.mobile[1]}px`};\n\n  @media only screen and ${media.md} {\n    ${(props) =>\n      !props.isEmptyHistory &&\n      `margin: 0 -${defaultPaddings.tablet[1]}px -${defaultPaddings.tablet[0]}px -${defaultPaddings.tablet[1]}px`};\n  }\n\n  @media only screen and ${media.xl} {\n    margin: 0;\n  }\n`;\n\nexport const Text = styled(Typography.Text)`\n  @media only screen and ${media.md} {\n    font-size: 1rem;\n  }\n`;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Card } from '@app/components/common/Card/Card';\nimport { Payment } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment';\nimport { PaymentsTable } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { getPaymentHistory, Payment as IPayment } from '@app/api/paymentHistory.api';\nimport * as S from './PaymentHistory.styles';\n\nexport const PaymentHistory: React.FC = () => {\n  const [history, setHistory] = useState<IPayment[]>([]);\n\n  const { mobileOnly, isTablet } = useResponsive();\n\n  const { t } = useTranslation();\n\n  const payments = useMemo(\n    () =>\n      history.map((item) => (\n        <Payment\n          key={item.id}\n          src={item.imgUrl}\n          recipient={item.recipient}\n          date={item.date}\n          status={item.status}\n          price={item.amount}\n          currency={item.currency}\n        />\n      )),\n    [history],\n  );\n\n  useEffect(() => {\n    getPaymentHistory().then((res) => setHistory(res));\n  }, []);\n\n  const content = useMemo(\n    () => (\n      <Row gutter={[32, 32]}>\n        <Col span={24}>\n          <BaseForm.Title>{t('profile.nav.payments.paymentHistory')}</BaseForm.Title>\n        </Col>\n\n        <Col span={24}>\n          <S.ContentWrapper isEmptyHistory={history.length === 0}>\n            {mobileOnly && (history.length > 0 ? payments : <S.Text>{t('profile.nav.payments.noHistory')}</S.Text>)}\n\n            {isTablet && <PaymentsTable payments={history} />}\n          </S.ContentWrapper>\n        </Col>\n      </Row>\n    ),\n    [isTablet, history, payments, mobileOnly, t],\n  );\n\n  return isTablet ? content : <Card>{content}</Card>;\n};\n","import { CurrencyType } from '@app/interfaces/interfaces';\n\nexport interface Payment {\n  id: number;\n  recipient: string;\n  date: number;\n  status: number;\n  amount: number;\n  currency: CurrencyType;\n  imgUrl: string;\n}\n\nexport const getPaymentHistory = (): Promise<Payment[]> => {\n  return new Promise((res) => {\n    setTimeout(() => {\n      res([\n        {\n          id: 1,\n          recipient: 'IBM Transactions',\n          date: 1626037200000,\n          status: 1,\n          amount: 500,\n          currency: 'USD',\n          imgUrl: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1632988451/Ellipse_72_hwxejr.png',\n        },\n        {\n          id: 2,\n          recipient: 'Citigroup',\n          date: 1630443600000,\n          status: 2,\n          amount: 40,\n          currency: 'USD',\n          imgUrl: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1632988456/Ellipse_73_zanfs3.png',\n        },\n        {\n          id: 3,\n          recipient: 'Netflix',\n          date: 1628370000000,\n          status: 3,\n          amount: 1200,\n          currency: 'USD',\n          imgUrl: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1632988460/Ellipse_73_1_hhfpzj.png',\n        },\n        {\n          id: 4,\n          recipient: 'IBM Transactions',\n          date: 1622667600000,\n          status: 4,\n          amount: 190,\n          currency: 'USD',\n          imgUrl: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1632988451/Ellipse_72_hwxejr.png',\n        },\n      ]);\n    }, 0);\n  });\n};\n","import styled from 'styled-components';\n\ninterface PaymentCardProps {\n  $background: string;\n}\n\nexport const Wrapper = styled.div<PaymentCardProps>`\n  & > .rccs > .rccs__card--unknown > div {\n    background: ${(props) => `url(${props.$background})`};\n    background-size: cover;\n    transition: all 0.5s ease;\n  }\n\n  & > .rccs > .rccs__card {\n    & .rccs__card--front,\n    & .rccs__card--back {\n      box-shadow: none;\n    }\n\n    & > .rccs__card--front .rccs__issuer {\n      right: unset;\n      left: 10%;\n      background-position: left;\n    }\n\n    & > div {\n      color: var(--text-secondary-color);\n\n      & > .rccs__chip {\n        display: none;\n      }\n\n      & > div:first-of-type {\n        background: ${(props) => `url(${props.$background})`};\n        background-size: cover;\n        transition: all 0.5s ease;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport Cards from 'elt-react-credit-cards';\nimport 'elt-react-credit-cards/es/styles-compiled.css';\nimport { CreditCard } from '../paymentForm/interfaces';\nimport * as S from './PaymentCard.styles';\n\ninterface PaymentCardProps {\n  className?: string;\n  cardData: CreditCard;\n  children?: React.ReactNode;\n}\n\nexport const PaymentCard: React.FC<PaymentCardProps> = ({ className, cardData, children }) => (\n  <S.Wrapper className={className} $background={cardData.background}>\n    <Cards {...cardData} />\n    {children}\n  </S.Wrapper>\n);\n","import styled from 'styled-components';\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  position: absolute;\n  column-gap: 1rem;\n  top: 13%;\n  right: 7%;\n\n  & > button {\n    padding: 0;\n    width: unset;\n    height: unset;\n\n    color: var(--text-secondary-color);\n  }\n`;\n","import React from 'react';\nimport { Button, Popconfirm } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './ActionButtons.styles';\n\ninterface ActionButtonsProps {\n  onRemove: () => void;\n}\n\nexport const ActionButtons: React.FC<ActionButtonsProps> = ({ onRemove }) => {\n  const { t } = useTranslation();\n\n  return (\n    <S.BtnWrapper>\n      <Popconfirm title={t('common.deleteQuestion')} onConfirm={onRemove}>\n        <Button type=\"link\" icon={<DeleteOutlined />} />\n      </Popconfirm>\n    </S.BtnWrapper>\n  );\n};\n","import { Button } from '@app/components/common/buttons/Button/Button';\nimport styled from 'styled-components';\n\nexport const AddBtn = styled(Button)`\n  width: 290px;\n  height: 182.86px;\n  font-size: 2rem;\n  border-radius: 14.5px;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport MaskedInput from 'antd-mask-input';\nimport { CardInputProps } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const CardNumberItem: React.FC<CardInputProps> = ({ disabled, handleInputFocus }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"number\"\n      label={t('profile.nav.payments.cardNumber')}\n      rules={[\n        {\n          required: true,\n          message: t('common.requiredField'),\n        },\n      ]}\n    >\n      <MaskedInput\n        placeholderChar=\" \"\n        placeholder={t('profile.nav.payments.yourCardNumber')}\n        name=\"number\"\n        mask=\"1111 1111 1111 1111\"\n        onFocus={handleInputFocus}\n        disabled={disabled}\n      />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { CardInputProps } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const CardholderItem: React.FC<CardInputProps> = ({ disabled, handleInputFocus }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"name\"\n      label={t('profile.nav.payments.cardholderName')}\n      rules={[\n        {\n          required: true,\n          message: t('common.requiredField'),\n        },\n      ]}\n    >\n      <Input\n        name=\"name\"\n        placeholder={t('profile.nav.payments.yourName')}\n        onFocus={handleInputFocus}\n        disabled={disabled}\n      />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport MaskedInput from 'antd-mask-input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { CardInputProps } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const ExpDateItem: React.FC<CardInputProps> = ({ disabled, handleInputFocus }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"expiry\"\n      label={t('profile.nav.payments.expDate')}\n      rules={[\n        {\n          required: true,\n          message: t('common.requiredField'),\n        },\n      ]}\n    >\n      <MaskedInput\n        placeholderChar=\" \"\n        placeholder=\"MM/YY\"\n        mask=\"11/11\"\n        name=\"expiry\"\n        onFocus={handleInputFocus}\n        disabled={disabled}\n      />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport MaskedInput from 'antd-mask-input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { CardInputProps } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const CVVItem: React.FC<CardInputProps> = ({ disabled, handleInputFocus }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"cvc\"\n      label={t('profile.nav.payments.CVV')}\n      rules={[\n        {\n          required: true,\n          message: t('common.requiredField'),\n        },\n      ]}\n    >\n      <MaskedInput\n        placeholderChar=\" \"\n        placeholder=\"***\"\n        mask=\"111\"\n        name=\"cvc\"\n        onFocus={handleInputFocus}\n        disabled={disabled}\n      />\n    </BaseButtonsForm.Item>\n  );\n};\n","export interface CardTheme {\n  id: number;\n  background: string;\n}\n\nexport const cardThemes: CardTheme[] = [\n  {\n    id: 1,\n    background:\n      'https://res.cloudinary.com/lapkinthegod/image/upload/v1633425628/horizontal-wide-red-pink-blue-blurred-background_136277-125_bk9drb.jpg',\n  },\n  {\n    id: 2,\n    background:\n      'https://res.cloudinary.com/lapkinthegod/image/upload/v1633007324/vivid-blurred-colorful-wallpaper-background_1_h1k9sc.png',\n  },\n  {\n    id: 3,\n    background: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1633007328/43064_1_z6kdji.png',\n  },\n  {\n    id: 4,\n    background:\n      'https://res.cloudinary.com/lapkinthegod/image/upload/v1633007330/abstract-luxury-gradient-blue-background-smooth-dark-blue-with-black-vignette-studio-banner_1_x81z7y.png',\n  },\n  {\n    id: 5,\n    background: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1633102260/Mask_Group_1_cr4x7l.png',\n  },\n  {\n    id: 6,\n    background: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1633102263/Rectangle_917_1_ssqdbc.png',\n  },\n];\n","import { BORDER_RADIUS } from '@app/styles/themes/constants';\nimport styled from 'styled-components';\n\ninterface BackgroundWrapperProps {\n  isActive: boolean;\n  background: string;\n}\n\nexport const BackgroundWrapper = styled.div<BackgroundWrapperProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  width: 3.125rem;\n  height: 3.125rem;\n  margin: 0 auto;\n  transition: all 0.5s ease;\n\n  border-radius: ${BORDER_RADIUS};\n\n  ${(props) => props.isActive && `background: url(${props.background})`};\n  background-size: cover;\n\n  & > div {\n    background: ${(props) => `url(${props.background})`};\n    background-size: cover;\n  }\n\n  &:hover {\n    opacity: 0.7;\n\n    ${(props) => `background: url(${props.background})`};\n    background-size: cover;\n  }\n`;\n\nexport const Theme = styled.div`\n  width: calc(100% - 0.4rem);\n  height: calc(100% - 0.4rem);\n  margin: 0.2rem;\n\n  border: 5px solid var(--background-color);\n\n  border-radius: ${BORDER_RADIUS};\n`;\n","import React, { useCallback, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { CardTheme, cardThemes } from '@app/constants/cardThemes';\nimport { CreditCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\nimport * as S from './CardThemeItem.styles';\n\ninterface CardThemeItemProps {\n  cardData: CreditCard;\n  setCardData: (state: CreditCard) => void;\n}\n\nexport const CardThemeItem: React.FC<CardThemeItemProps> = ({ cardData, setCardData }) => {\n  const { t } = useTranslation();\n\n  const handleChange = useCallback(\n    (item: CardTheme) => () => {\n      setCardData({ ...cardData, background: item.background });\n    },\n    [setCardData, cardData],\n  );\n\n  const themes = useMemo(\n    () =>\n      cardThemes.map((item) => (\n        <Col xs={8} md={4} key={item.id}>\n          <S.BackgroundWrapper background={item.background} isActive={cardData.background === item.background}>\n            <S.Theme tabIndex={0} onClick={handleChange(item)} />\n          </S.BackgroundWrapper>\n        </Col>\n      )),\n    [cardData, handleChange],\n  );\n\n  return (\n    <BaseButtonsForm.Item label={t('profile.nav.payments.cardTheme')}>\n      <Row gutter={[10, 10]}>{themes}</Row>\n    </BaseButtonsForm.Item>\n  );\n};\n","import styled from 'styled-components';\nimport { PaymentCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCard/PaymentCard';\n\nexport const PayCard = styled(PaymentCard)`\n  position: absolute;\n  top: -5rem;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nexport const FormItemsWrapper = styled.div`\n  padding-top: 7.5rem;\n`;\n","import React, { useCallback, useState } from 'react';\nimport { Col, Form, Row } from 'antd';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { CardNumberItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardNumberItem/CardNumberItem';\nimport { CardholderItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardholderItem/CardholderItem';\nimport { ExpDateItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/ExpDateItem/ExpDateItem';\nimport { CVVItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CVVItem/CVVItem';\nimport { CardThemeItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardThemeItem/CardThemeItem';\nimport { CreditCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\nimport { cardThemes } from '@app/constants/cardThemes';\nimport * as S from './PaymentForm.styles';\n\nexport const clearCardData: CreditCard = {\n  name: '',\n  cvc: '',\n  expiry: '',\n  number: '',\n  focused: '',\n  background: cardThemes[0].background,\n  isEdit: false,\n};\n\ninterface PaymentFormProps {\n  closeModal: () => void;\n  onFormFinish: (card: CreditCard) => void;\n}\n\nexport const PaymentForm: React.FC<PaymentFormProps> = ({ closeModal, onFormFinish }) => {\n  const [cardData, setCardData] = useState<CreditCard>(clearCardData);\n  const [isLoading, setLoading] = useState(false);\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n\n  const [form] = Form.useForm();\n\n  const handleInputFocus = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setCardData({\n        ...cardData,\n        focused: event.target.name,\n      });\n    },\n    [setCardData, cardData],\n  );\n\n  const onFinish = useCallback(\n    (values: CreditCard) => {\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false);\n        setFieldsChanged(false);\n        const card = { ...values, background: cardData.background };\n        onFormFinish(card);\n        setCardData(clearCardData);\n        closeModal();\n        form.setFieldsValue(clearCardData);\n      }, 1000);\n    },\n    [cardData.background, closeModal, form, onFormFinish],\n  );\n\n  return (\n    <BaseButtonsForm\n      form={form}\n      requiredMark=\"optional\"\n      name=\"paymentCard\"\n      onFinish={onFinish}\n      footer={<BaseButtonsGroup loading={isLoading} onCancel={closeModal} />}\n      initialValues={clearCardData}\n      onValuesChange={(field) => {\n        const values = Object.entries(field)[0];\n\n        setCardData({ ...cardData, [values[0]]: values[1] });\n      }}\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n    >\n      <S.PayCard cardData={cardData} />\n      <S.FormItemsWrapper>\n        <CardNumberItem handleInputFocus={handleInputFocus} />\n        <CardholderItem handleInputFocus={handleInputFocus} />\n        <Row gutter={[20, 0]}>\n          <Col span={12}>\n            <ExpDateItem handleInputFocus={handleInputFocus} />\n          </Col>\n          <Col span={12}>\n            <CVVItem handleInputFocus={handleInputFocus} />\n          </Col>\n        </Row>\n        <CardThemeItem cardData={cardData} setCardData={setCardData} />\n      </S.FormItemsWrapper>\n    </BaseButtonsForm>\n  );\n};\n","import React from 'react';\nimport { Modal } from '@app/components/common/Modal/Modal';\nimport { CreditCard } from '../paymentForm/interfaces';\nimport { PaymentForm } from '../paymentForm/PaymentForm/PaymentForm';\n\ninterface PaymentModalProps {\n  isModalVisible: boolean;\n  closeModal: () => void;\n  onCardAdd: (card: CreditCard) => void;\n}\n\nexport const AddNewCardModal: React.FC<PaymentModalProps> = ({ isModalVisible, closeModal, onCardAdd }) => {\n  return (\n    <Modal destroyOnClose size=\"small\" visible={isModalVisible} onCancel={closeModal} footer={null} closable={false}>\n      <PaymentForm closeModal={closeModal} onFormFinish={onCardAdd} />\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport * as S from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardButton/AddNewCardButton.styles';\nimport { AddNewCardModal } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardModal';\nimport { CreditCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\nimport { useTranslation } from 'react-i18next';\n\ninterface AddNewCardButtonProps {\n  onCardAdd: (card: CreditCard) => void;\n}\nexport const AddNewCardButton: React.FC<AddNewCardButtonProps> = ({ onCardAdd }) => {\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  const openModal = () => setModalVisible(true);\n  const closeModal = () => setModalVisible(false);\n\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <S.AddBtn type=\"ghost\" onClick={openModal}>\n        {t('profile.nav.payments.addNewCard')}\n      </S.AddBtn>\n      <AddNewCardModal isModalVisible={isModalVisible} closeModal={closeModal} onCardAdd={onCardAdd} />\n    </>\n  );\n};\n","import React from 'react';\nimport { CreditCard } from './paymentForm/interfaces';\nimport { PaymentCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCard/PaymentCard';\nimport { Col, Row } from 'antd';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { ActionButtons } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/ActionButtons/ActionButtons';\nimport { AddNewCardButton } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardButton/AddNewCardButton';\n\ninterface PaymentCardsWidgetProps {\n  cards: CreditCard[];\n  onCardRemove: (cardNumber: string) => void;\n  onCardAdd: (card: CreditCard) => void;\n}\n\nexport const PaymentCardsWidget: React.FC<PaymentCardsWidgetProps> = ({ cards, onCardRemove, onCardAdd }) => {\n  const { useMediaQuery } = useResponsive();\n\n  const breakpoint = 659.98; // calculated manually according to default card size (290px) and other factors\n  const isBreakpoint = useMediaQuery({ query: `(min-width: ${breakpoint}px)` });\n\n  const justify = isBreakpoint ? 'start' : 'space-around';\n\n  return (\n    <Row justify={justify} gutter={[16, 16]}>\n      {cards.map((card) => (\n        <Col key={card.number}>\n          <PaymentCard cardData={card}>\n            <ActionButtons onRemove={() => onCardRemove(card.number)} />\n          </PaymentCard>\n        </Col>\n      ))}\n      <Col>\n        <AddNewCardButton onCardAdd={onCardAdd} />\n      </Col>\n    </Row>\n  );\n};\n","import { cardThemes } from './cardThemes';\n\nexport const cards = [\n  {\n    name: 'Dean James',\n    cvc: '144',\n    expiry: '11/24',\n    number: '4255 2003 0168 9006',\n    focused: '',\n    background: cardThemes[0].background,\n    isEdit: false,\n  },\n  {\n    name: 'Walker Alan',\n    cvc: '179',\n    expiry: '05/23',\n    number: '5245 0017 2000 0164',\n    focused: '',\n    background: cardThemes[3].background,\n    isEdit: false,\n  },\n  {\n    name: 'Jackson Michael',\n    cvc: '345',\n    expiry: '12/22',\n    number: '4255 1000 2046 8006',\n    focused: '',\n    background: cardThemes[5].background,\n    isEdit: false,\n  },\n  {\n    name: 'Chris Johnson',\n    cvc: '222',\n    expiry: '09/24',\n    number: '5205 0024 2535 5235',\n    focused: '',\n    background: cardThemes[4].background,\n    isEdit: false,\n  },\n];\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Card } from '@app/components/common/Card/Card';\nimport { PaymentCardsWidget } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCardsWidget';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { cards as initialCards } from '@app/constants/cards';\nimport { CreditCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const PaymentMethod: React.FC = () => {\n  const { t } = useTranslation();\n\n  const [cards, setCards] = useState<CreditCard[]>(initialCards);\n\n  const { isTablet } = useResponsive();\n\n  const handleCardRemove = (cardNumber: string) => setCards(cards.filter((card) => card.number !== cardNumber));\n\n  const handleCardAdd = (card: CreditCard) => {\n    setCards([...cards, card]);\n  };\n\n  const content = (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <BaseForm.Title>{t('profile.nav.payments.paymentMethod')}</BaseForm.Title>\n      </Col>\n      <Col span={24}>\n        <PaymentCardsWidget cards={cards} onCardRemove={handleCardRemove} onCardAdd={handleCardAdd} />\n      </Col>\n    </Row>\n  );\n\n  return isTablet ? content : <Card>{content}</Card>;\n};\n","import React, { useMemo } from 'react';\nimport { Col, Row } from 'antd';\nimport { PaymentHistory } from './paymentHistory/PaymentHistory/PaymentHistory';\nimport { PaymentMethod } from './paymentMethod/PaymentMethod';\nimport { Card } from 'components/common/Card/Card';\nimport { useResponsive } from 'hooks/useResponsive';\n\nexport const Payments: React.FC = () => {\n  const { isTablet } = useResponsive();\n\n  const content = useMemo(\n    () => (\n      <Row gutter={[0, 30]}>\n        <Col span={24}>\n          <PaymentMethod />\n        </Col>\n        <Col span={24}>\n          <PaymentHistory />\n        </Col>\n      </Row>\n    ),\n    [],\n  );\n\n  return isTablet ? <Card>{content}</Card> : content;\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport { Payments } from '@app/components/profile/profileCard/profileFormNav/nav/payments/Payments';\n\nconst PaymentsPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('profile.nav.payments.title')}</PageTitle>\n      <Payments />\n    </>\n  );\n};\n\nexport default PaymentsPage;\n"],"sourceRoot":""}