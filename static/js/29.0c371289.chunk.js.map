{"version":3,"sources":["components/common/Upload/Upload.styles.ts","components/common/Upload/Upload.tsx","pages/uiComponentsPages/forms/UploadsPage.tsx"],"names":["Upload","styled","AntdUpload","UploadDragger","Dragger","props","DraggerIconWrapper","div","DraggerTitle","FONT_SIZE","xl","FONT_WEIGHT","bold","DraggerDescription","md","UploadsPage","t","useTranslation","uploadProps","name","multiple","action","onChange","info","status","file","console","log","fileList","message","success","error","title","icon","directory"],"mappings":"sOAGaA,EAASC,kBAAOC,IAAPD,CAAH,0B,OCAKE,EAAkBD,IAA3BE,QAEFJ,EAAgC,SAACK,GAC5C,OAAO,cAAC,EAAD,eAAcA,M,2KCKjBC,EAAqBL,UAAOM,IAAV,gFAIlBC,EAAeP,UAAOM,IAAV,mEACHE,IAAUC,GACRC,IAAYC,MAEvBC,EAAqBZ,UAAOM,IAAV,kEACTE,IAAUK,IAoDVC,UAhDe,WAC5B,IAAQC,EAAMC,cAAND,EAEFE,EAAc,CAClBC,KAAM,OACNC,UAAU,EACVC,OAAQ,mDACRC,SAAU,SAACC,GACT,IAAQC,EAAWD,EAAKE,KAAhBD,OACO,cAAXA,GACFE,QAAQC,IAAIJ,EAAKE,KAAMF,EAAKK,UAEf,SAAXJ,EACFK,IAAQC,QAAQd,EAAE,wBAAyB,CAAEG,KAAMI,EAAKE,KAAKN,QACzC,UAAXK,GACTK,IAAQE,MAAMf,EAAE,uBAAwB,CAAEG,KAAMI,EAAKE,KAAKN,UAKhE,OACE,qCACE,cAAC,IAAD,UAAYH,EAAE,mBACd,eAAC,IAAD,WACE,cAAC,IAAD,CAAQgB,MAAOhB,EAAE,iBAAjB,SACE,cAAC,IAAD,2BAAYE,GAAZ,aACE,cAAC,IAAD,CAAQe,KAAM,cAAC,IAAD,IAAd,SAAmCjB,EAAE,gCAGzC,cAAC,IAAD,CAAQgB,MAAOhB,EAAE,qBAAjB,SACE,cAAC,IAAD,CAAQK,OAAO,mDAAmDa,WAAS,EAA3E,SACE,cAAC,IAAD,CAAQD,KAAM,cAAC,IAAD,IAAd,SAAmCjB,EAAE,2BAGzC,cAAC,IAAD,CAAQgB,MAAOhB,EAAE,mBAAjB,SACE,eAAC,IAAD,2BAAmBE,GAAnB,cACE,cAACZ,EAAD,UACE,cAAC,IAAD,MAEF,cAACE,EAAD,UAAeQ,EAAE,wBACjB,cAACH,EAAD,UAAqBG,EAAE","file":"static/js/29.0c371289.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Upload as AntdUpload } from 'antd';\n\nexport const Upload = styled(AntdUpload)``;\n","import { Upload as AntdUpload, UploadProps } from 'antd';\nimport * as S from './Upload.styles';\n\nexport const { Dragger: UploadDragger } = AntdUpload;\n\nexport const Upload: React.FC<UploadProps> = (props) => {\n  return <S.Upload {...props} />;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Col, message } from 'antd';\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { Upload, UploadDragger } from '@app/components/common/Upload/Upload';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\n\nconst DraggerIconWrapper = styled.div`\n  font-size: 4rem;\n  color: var(--primary-color);\n`;\nconst DraggerTitle = styled.div`\n  font-size: ${FONT_SIZE.xl};\n  font-weight: ${FONT_WEIGHT.bold};\n`;\nconst DraggerDescription = styled.div`\n  font-size: ${FONT_SIZE.md};\n  padding: 0 1rem;\n`;\n\nconst UploadsPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  const uploadProps = {\n    name: 'file',\n    multiple: true,\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    onChange: (info: any) => {\n      const { status } = info.file;\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (status === 'done') {\n        message.success(t('uploads.successUpload', { name: info.file.name }));\n      } else if (status === 'error') {\n        message.error(t('uploads.failedUpload', { name: info.file.name }));\n      }\n    },\n  };\n\n  return (\n    <>\n      <PageTitle>{t('common.upload')}</PageTitle>\n      <Col>\n        <S.Card title={t('uploads.basic')}>\n          <Upload {...uploadProps}>\n            <Button icon={<UploadOutlined />}>{t('uploads.clickToUpload')}</Button>\n          </Upload>\n        </S.Card>\n        <S.Card title={t('uploads.directory')}>\n          <Upload action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\" directory>\n            <Button icon={<UploadOutlined />}>{t('uploads.directory')}</Button>\n          </Upload>\n        </S.Card>\n        <S.Card title={t('uploads.dragger')}>\n          <UploadDragger {...uploadProps}>\n            <DraggerIconWrapper>\n              <InboxOutlined />\n            </DraggerIconWrapper>\n            <DraggerTitle>{t('uploads.dragUpload')}</DraggerTitle>\n            <DraggerDescription>{t('uploads.bulkUpload')}</DraggerDescription>\n          </UploadDragger>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default UploadsPage;\n"],"sourceRoot":""}