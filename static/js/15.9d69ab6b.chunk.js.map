{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","constants/kanbanTags.ts","components/apps/kanban/newCardForm/TagDropdown/TagDropdown.styles.ts","components/apps/kanban/newCardForm/TagDropdown/TagDropdown.tsx","components/apps/kanban/newCardForm/NewCardForm/NewCardForm.styles.ts","constants/kanbanPeople.ts","assets/images/stub-avatar.webp","components/apps/kanban/newCardForm/ParticipantsDropdown/ParticipantsDropdown.styles.ts","components/apps/kanban/newCardForm/ParticipantsDropdown/ParticipantsDropdown.tsx","components/apps/kanban/newCardForm/NewCardForm/NewCardForm.tsx","components/apps/kanban/Card/Card.styles.ts","components/apps/kanban/Card/Card.tsx","components/apps/kanban/LaneHeader/LaneHeader.styles.ts","components/apps/kanban/LaneHeader/LaneHeader.tsx","components/apps/kanban/AddCardLink/AddCardLink.styles.ts","components/apps/kanban/AddCardLink/AddCardLink.tsx","components/apps/kanban/NewLaneSection/NewLaneSection.styles.ts","assets/images/new-lane.webp","components/apps/kanban/NewLaneSection/NewLaneSection.tsx","components/apps/kanban/NewLaneForm/NewLaneForm.styles.ts","components/apps/kanban/NewLaneForm/NewLaneForm.tsx","constants/kanbanData.ts","components/apps/kanban/Kanban/Kanban.styles.ts","components/apps/kanban/Kanban/Kanban.tsx","pages/KanbanPage.tsx"],"names":["BaseButtonsForm","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","BaseForm","useForm","formDefault","currentForm","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","BaseButtonsGroup","className","t","useTranslation","gutter","wrap","span","block","type","onClick","htmlType","kanbanTags","high","id","title","bgColor","medium","low","ui","dev","EditTagPopover","styled","div","EditTagPopoverLine","PopoverCheckbox","Checkbox","TagWrapper","backgroundColor","FONT_SIZE","xs","RemoveTagWrapper","RemoveTag","CloseOutlined","TagsWrapper","TagPlusWrapper","xxl","AddTag","TagDropdown","selectedTags","setSelectedTags","kanbanTagData","Object","values","selectedTagsIds","map","item","onTagClick","tag","isExist","includes","filter","Dropdown","trigger","overlay","e","stopPropagation","checked","length","Tag","removeTag","PlusCircleFilled","FooterButtons","FormInput","FONT_WEIGHT","semibold","CardWrapper","Card","kanbanPeople","anna","name","avatar","process","pavel","EditParticipantPopover","RemoveParticipantWrapper","ClosePopover","AddParticipant","ParticipantsWrapper","ParticipantRow","ParticipantAvatar","img","ParticipantName","RemoveParticipant","xxs","ParticipantsDropdown","selectedParticipants","setSelectedParticipants","kanbanPeopleData","selectedParticipantsIds","onPeopleClick","placement","participant","src","StubAvatar","formInputs","NewCardForm","onAdd","useState","isLoading","setLoading","formItems","useMemo","index","placeholder","bordered","size","onFinish","setTimeout","tags","participants","Panel","Collapse","CardContent","CollapseCard","ArrowDownIcon","DownOutlined","$expanded","MovableCardWrapper","CardRightContent","RightContent","CardTitle","md","CardHeader","Header","CardDetails","Detail","CardFooter","Footer","CardMenu","Menu","MenuItem","Input","InlineInput","EditPopover","onDelete","onArchive","selectable","style","onChange","description","cardDraggable","editable","isExpanded","setIsExpanded","updateCard","card","onDeleteCard","defaultActiveKey","showArrow","header","draggable","value","border","resize","onSave","Button","noStyle","icon","MoreOutlined","LaneHeader","lg","bold","Dot","updateTitle","onDoubleClick","editLaneTitle","cards","numberOfCards","AddCardWrapper","BORDER_RADIUS","AddCardLink","PlusOutlined","NewLaneSection","NewLane","CreateNewColumn","NewLaneImage","PlusIcon","Form","media","xl","NewLaneForm","uuidv4","kanbanData","lanes","Kanban","Board","LAYOUT","mobile","paddingHorizontal","desktop","components","laneDraggable","canAddLanes","data","laneStyle","background","maxHeight","cardStyle","borderRadius","padding","marginBottom","minWidth","maxWidth","KanbanPage","PageTitle"],"mappings":"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","file":"static/js/15.9d69ab6b.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React, { ComponentProps } from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\n\ninterface BaseButtonsGroupProps extends ComponentProps<typeof Button> {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className={className} gutter={[10, 10]} wrap={false}>\n      <Col span={12}>\n        <Button block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","interface Tag {\n  id: string;\n  title: string;\n  bgColor: 'error' | 'warning' | 'success' | 'primary';\n}\n\ninterface KanbanTags {\n  [key: string]: Tag;\n}\n\nexport const kanbanTags: KanbanTags = {\n  high: {\n    id: 'high',\n    title: 'high',\n    bgColor: 'error',\n  },\n  medium: {\n    id: 'medium',\n    title: 'medium',\n    bgColor: 'warning',\n  },\n  low: {\n    id: 'low',\n    title: 'low',\n    bgColor: 'success',\n  },\n  ui: {\n    id: 'ui',\n    title: 'ui',\n    bgColor: 'primary',\n  },\n  dev: {\n    id: 'dev',\n    title: 'dev',\n    bgColor: 'primary',\n  },\n};\n","import styled from 'styled-components';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Checkbox } from 'antd';\nimport { FONT_SIZE } from '@app/styles/themes/constants';\n\ninterface TagProps {\n  backgroundColor: 'error' | 'warning' | 'success' | 'primary';\n}\n\nexport const EditTagPopover = styled.div`\n  padding: 1.25rem 1.5625rem;\n  max-width: 14.375rem;\n  min-width: 14.375rem;\n  gap: 0.625rem;\n  display: flex;\n  background: var(--background-color);\n  flex-direction: column;\n  border-radius: 0.625rem;\n  z-index: 1;\n  filter: drop-shadow(0 0 3px rgba(0, 0, 0, 0.2));\n`;\n\nexport const EditTagPopoverLine = styled.span`\n  line-height: 1.25rem;\n  display: flex;\n  &:last-child {\n    padding-bottom: 0;\n  }\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const PopoverCheckbox = styled(Checkbox)`\n  & .ant-checkbox .ant-checkbox-inner {\n    border-radius: 3px;\n    height: 1.375rem;\n    width: 1.375rem;\n    border-color: var(--primary-color);\n  }\n  & .ant-checkbox-checked .ant-checkbox-inner::after {\n    left: 0.375rem;\n  }\n`;\n\nexport const TagWrapper = styled.span<TagProps>`\n  height: 1.875rem;\n  background-color: ${(props) => `var(--${props.backgroundColor}-color)`};\n  padding: 0.3125rem 0.625rem;\n  color: var(--text-secondary-color);\n  border-radius: 0.5rem;\n  font-size: ${FONT_SIZE.xs};\n  margin-left: 1rem;\n`;\n\nexport const RemoveTagWrapper = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n  cursor: pointer;\n`;\n\nexport const RemoveTag = styled(CloseOutlined)`\n  color: var(--primary-color);\n  width: 0.875rem;\n  height: 0.875rem;\n`;\n\nexport const TagsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.625rem;\n  margin-bottom: 1rem;\n  min-height: 1.25rem;\n  align-items: center;\n`;\n\nexport const TagPlusWrapper = styled.span`\n  display: flex;\n  height: 1.875rem;\n  align-items: center;\n  color: var(--lightgrey);\n  font-size: ${FONT_SIZE.xxl};\n`;\n\nexport const AddTag = styled.span`\n  font-size: ${FONT_SIZE.xs};\n  line-height: 1.25rem;\n  text-decoration: underline;\n  color: var(--text-light-color);\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Tag as ITag } from '../../interfaces';\nimport { kanbanTags } from 'constants/kanbanTags';\nimport * as S from './TagDropdown.styles';\nimport { Tag } from 'components/common/Tag/Tag';\nimport { PlusCircleFilled } from '@ant-design/icons';\n\ninterface TagDropdownProps {\n  selectedTags: ITag[];\n  setSelectedTags: (state: ITag[]) => void;\n}\n\nexport const TagDropdown: React.FC<TagDropdownProps> = ({ selectedTags, setSelectedTags }) => {\n  const { t } = useTranslation();\n\n  const kanbanTagData = Object.values(kanbanTags);\n  const selectedTagsIds = selectedTags.map((item) => item.id);\n\n  const onTagClick = (tag: ITag) => {\n    const isExist = selectedTagsIds.includes(tag.id);\n\n    if (isExist) {\n      setSelectedTags(selectedTags.filter((item) => item.id !== tag.id));\n    } else {\n      setSelectedTags([...selectedTags, tag]);\n    }\n  };\n\n  return (\n    <Dropdown\n      trigger={['click']}\n      overlay={\n        <S.EditTagPopover>\n          {kanbanTagData.map((tag: ITag) => (\n            <S.EditTagPopoverLine\n              key={tag.id}\n              onClick={(e) => {\n                onTagClick(tag);\n                e.stopPropagation();\n              }}\n            >\n              <S.PopoverCheckbox checked={selectedTagsIds.includes(tag.id)} />\n              <S.TagWrapper backgroundColor={tag.bgColor}>#{tag.title}</S.TagWrapper>\n            </S.EditTagPopoverLine>\n          ))}\n          <S.RemoveTagWrapper>\n            <S.RemoveTag />\n          </S.RemoveTagWrapper>\n        </S.EditTagPopover>\n      }\n    >\n      {selectedTags && selectedTags.length > 0 ? (\n        <S.TagsWrapper>\n          {selectedTags.map((tag) => (\n            <Tag key={tag.id} {...tag} removeTag={() => onTagClick(tag)} />\n          ))}\n          <S.TagPlusWrapper>\n            <PlusCircleFilled />\n          </S.TagPlusWrapper>\n        </S.TagsWrapper>\n      ) : (\n        <S.TagsWrapper>\n          <S.AddTag>{t('kanban.addTag')}</S.AddTag>\n        </S.TagsWrapper>\n      )}\n    </Dropdown>\n  );\n};\n","import styled from 'styled-components';\nimport { CardWrapper as Card } from 'react-trello/dist/styles/Base';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\n\nexport const FooterButtons = styled(BaseButtonsGroup)`\n  margin-top: 1rem;\n`;\n\nexport const FormInput = styled(BaseForm.Item)`\n  font-weight: ${FONT_WEIGHT.medium};\n  max-height: 1.25rem;\n\n  &:first-child {\n    font-weight: ${FONT_WEIGHT.semibold};\n  }\n\n  .ant-input {\n    padding: 0;\n    font-size: ${FONT_SIZE.xs};\n    font-weight: inherit;\n  }\n\n  .ant-input::placeholder {\n    color: var(--text-light-color);\n  }\n\n  .ant-form-item-control-input {\n    min-height: auto;\n  }\n`;\n\nexport const CardWrapper = styled(Card)`\n  padding: 1.25rem 1rem;\n\n  background: var(--background-color);\n`;\n","const avatar1 = process.env.REACT_APP_ASSETS_BUCKET + '/avatars/avatar1.webp';\nconst avatar2 = process.env.REACT_APP_ASSETS_BUCKET + '/avatars/avatar2.webp';\n\nexport const kanbanPeople = {\n  anna: {\n    id: 'Alex',\n    name: 'Alex',\n    avatar: avatar1,\n  },\n  pavel: {\n    id: 'Pavel',\n    name: 'Pavel',\n    avatar: avatar2,\n  },\n};\n","export default __webpack_public_path__ + \"static/media/stub-avatar.c9ffdfe3.webp\";","import styled from 'styled-components';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Checkbox } from 'antd';\nimport { FONT_SIZE } from '@app/styles/themes/constants';\n\nexport const EditParticipantPopover = styled.div`\n  padding: 1.25rem 1rem;\n  max-width: 14.375rem;\n  gap: 0.625rem;\n  display: flex;\n  background: var(--background-color);\n  flex-direction: column;\n  border-radius: 0.625rem;\n  z-index: 1;\n  filter: drop-shadow(0 0 3px rgba(0, 0, 0, 0.2));\n`;\n\nexport const PopoverCheckbox = styled(Checkbox)`\n  & .ant-checkbox .ant-checkbox-inner {\n    border-radius: 3px;\n    height: 1.375rem;\n    width: 1.375rem;\n    border-color: var(--primary-color);\n  }\n  & .ant-checkbox-checked .ant-checkbox-inner::after {\n    left: 0.375rem;\n  }\n  margin-right: 0.75rem;\n`;\n\nexport const RemoveParticipantWrapper = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n  cursor: pointer;\n`;\n\nexport const ClosePopover = styled(CloseOutlined)`\n  color: var(--primary-color);\n  width: 0.875rem;\n  height: 0.875rem;\n`;\n\nexport const AddParticipant = styled.span`\n  font-size: ${FONT_SIZE.xs};\n  line-height: 1.25rem;\n  text-decoration: underline;\n  color: var(--text-light-color);\n`;\n\nexport const ParticipantsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nexport const ParticipantRow = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ParticipantAvatar = styled.img`\n  height: 1.5625rem;\n  width: 1.5625rem;\n  border-radius: 50%;\n`;\n\nexport const ParticipantName = styled.div`\n  font-size: ${FONT_SIZE.xs};\n  color: var(--text-main-color);\n  margin-left: 0.625rem;\n  margin-right: 0.625rem;\n`;\n\nexport const RemoveParticipant = styled(CloseOutlined)`\n  color: var(--text-light-color);\n  font-size: ${FONT_SIZE.xxs};\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Participant as IParticipant } from '../../interfaces';\nimport { kanbanPeople } from 'constants/kanbanPeople';\nimport StubAvatar from '../../../../../assets/images/stub-avatar.webp';\nimport * as S from './ParticipantsDropdown.styles';\n\ninterface ParticipantsDropdownProps {\n  selectedParticipants: IParticipant[];\n  setSelectedParticipants: (state: IParticipant[]) => void;\n}\n\nexport const ParticipantsDropdown: React.FC<ParticipantsDropdownProps> = ({\n  selectedParticipants,\n  setSelectedParticipants,\n}) => {\n  const { t } = useTranslation();\n  const kanbanPeopleData = Object.values(kanbanPeople);\n  const selectedParticipantsIds = selectedParticipants.map((item) => item.id);\n\n  const onPeopleClick = (tag: IParticipant) => {\n    const isExist = selectedParticipantsIds.includes(tag.id);\n\n    if (isExist) {\n      setSelectedParticipants(selectedParticipants.filter((item) => item.id !== tag.id));\n    } else {\n      setSelectedParticipants([...selectedParticipants, tag]);\n    }\n  };\n\n  return (\n    <Dropdown\n      placement=\"bottomCenter\"\n      trigger={['click']}\n      overlay={\n        <S.EditParticipantPopover>\n          {kanbanPeopleData.map((participant: IParticipant) => (\n            <S.ParticipantRow\n              key={participant.id}\n              onClick={(e) => {\n                onPeopleClick(participant);\n                e.stopPropagation();\n              }}\n            >\n              <S.PopoverCheckbox checked={selectedParticipantsIds.includes(participant.id)} />\n              <S.ParticipantAvatar src={participant.avatar ? participant.avatar : StubAvatar} />\n              <S.ParticipantName>{participant.name}</S.ParticipantName>\n            </S.ParticipantRow>\n          ))}\n          <S.RemoveParticipantWrapper>\n            <S.ClosePopover />\n          </S.RemoveParticipantWrapper>\n        </S.EditParticipantPopover>\n      }\n    >\n      {selectedParticipants && selectedParticipants.length > 0 ? (\n        <S.ParticipantsWrapper>\n          {selectedParticipants.map((participant) => (\n            <S.ParticipantRow key={participant.id}>\n              <S.ParticipantAvatar src={participant.avatar ? participant.avatar : StubAvatar} />\n              <S.ParticipantName>{participant.name}</S.ParticipantName>\n              <S.RemoveParticipant\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onPeopleClick(participant);\n                }}\n              />\n            </S.ParticipantRow>\n          ))}\n        </S.ParticipantsWrapper>\n      ) : (\n        <S.ParticipantsWrapper>\n          <S.AddParticipant>{t('kanban.addParticipant')}</S.AddParticipant>\n        </S.ParticipantsWrapper>\n      )}\n    </Dropdown>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Input } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CardState, Tag, Participant } from '../../interfaces';\nimport { TagDropdown } from '../TagDropdown/TagDropdown';\nimport * as S from './NewCardForm.styles';\nimport { ParticipantsDropdown } from '../ParticipantsDropdown/ParticipantsDropdown';\n\nconst formInputs = [\n  {\n    title: 'kanban.title',\n    name: 'title',\n  },\n  {\n    title: 'kanban.description',\n    name: 'description',\n  },\n];\n\ninterface NewCardFormProps {\n  onAdd: (state: CardState) => void;\n  onCancel: () => void;\n}\n\nexport const NewCardForm: React.FC<NewCardFormProps> = ({ onAdd, onCancel }) => {\n  const [selectedTags, setSelectedTags] = useState<Tag[]>([]);\n  const [selectedParticipants, setSelectedParticipants] = useState<Participant[]>([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const { t } = useTranslation();\n\n  const onFinish = (values: []) => {\n    setLoading(true);\n    setTimeout(() => {\n      onAdd({ ...values, tags: selectedTags, participants: selectedParticipants });\n      setLoading(false);\n    }, 1000);\n  };\n\n  const formItems = useMemo(\n    () =>\n      formInputs.map((item, index) => (\n        <S.FormInput key={index} name={item.name}>\n          <Input placeholder={t(item.title)} bordered={false} />\n        </S.FormInput>\n      )),\n    [t],\n  );\n\n  return (\n    <S.CardWrapper>\n      <BaseButtonsForm\n        name=\"addCard\"\n        isFieldsChanged\n        footer={<S.FooterButtons loading={isLoading} size=\"small\" onCancel={onCancel} />}\n        onFinish={onFinish}\n      >\n        {formItems}\n        <TagDropdown selectedTags={selectedTags} setSelectedTags={setSelectedTags} />\n        <ParticipantsDropdown\n          selectedParticipants={selectedParticipants}\n          setSelectedParticipants={setSelectedParticipants}\n        />\n      </BaseButtonsForm>\n    </S.CardWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport {\n  CardRightContent as RightContent,\n  CardTitle as Title,\n  CardHeader as Header,\n  Detail,\n  MovableCardWrapper,\n  Footer,\n} from 'react-trello/dist/styles/Base';\nimport { DownOutlined } from '@ant-design/icons';\nimport { Collapse, Menu } from 'antd';\nimport InlineInput from 'react-trello/dist/widgets/InlineInput';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\n\nconst { Panel } = Collapse;\n\ninterface ArrowDownIcon {\n  $expanded: boolean;\n}\n\nexport const CardContent = styled(Panel)`\n  & .ant-collapse-content .ant-collapse-content-box {\n    padding: 0;\n  }\n`;\n\nexport const CollapseCard = styled(Collapse)`\n  background: transparent;\n  & .ant-collapse-item {\n    border: none;\n  }\n  & .ant-collapse-item.ant-collapse-no-arrow > .ant-collapse-header {\n    padding: 0;\n  }\n\n  & .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n    padding: 0;\n  }\n`;\n\nexport const ParticipantsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nexport const ArrowDownIcon = styled(DownOutlined)<ArrowDownIcon>`\n  transform: ${(props) => `rotate(${props.$expanded ? 0 : 180}deg)`};\n`;\n\nexport const CardWrapper = styled(MovableCardWrapper)`\n  position: relative;\n`;\n\nexport const CardRightContent = styled(RightContent)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 1rem;\n  padding-right: 0;\n`;\n\nexport const CardTitle = styled(Title)`\n  font-size: ${FONT_SIZE.md};\n  line-height: 1.375rem;\n  font-weight: ${FONT_WEIGHT.semibold};\n  color: var(--text-main-color);\n  margin-left: -0.5rem;\n  display: flex;\n`;\n\nexport const CardHeader = styled(Header)`\n  border-bottom: none;\n  margin-bottom: 0;\n  padding-bottom: 0;\n  min-height: 1.375rem;\n  display: flex;\n  align-items: center;\n`;\n\nexport const CardDetails = styled(Detail)`\n  font-size: ${FONT_SIZE.xs};\n  font-weight: ${FONT_WEIGHT.medium};\n  color: var(--text-main-color);\n  margin-left: -0.5rem;\n  margin-top: 1rem;\n  display: flex;\n`;\n\nexport const CardFooter = styled(Footer)`\n  display: flex;\n  border: none;\n  padding-top: 1rem;\n  gap: 0.625rem;\n  justify-content: flex-start;\n`;\n\nexport const CardMenu = styled(Menu)`\n  box-shadow: var(--box-shadow-hover);\n`;\n\nexport const MenuItem = styled(Menu.Item)`\n  font-size: ${FONT_SIZE.xs};\n`;\n\nexport const Input = styled(InlineInput)`\n  && {\n    max-height: 28.125rem;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { ParticipantsDropdown } from '@app/components/apps/kanban/newCardForm/ParticipantsDropdown/ParticipantsDropdown';\nimport { TagDropdown } from '@app/components/apps/kanban/newCardForm/TagDropdown/TagDropdown';\nimport { CardState, Tag as ITag, Participant as IParticipant } from '@app/components/apps/kanban/interfaces';\nimport * as S from './Card.styles';\n\ninterface CardProps {\n  style: CSSStyleSheet;\n  onClick: () => void;\n  onDelete: () => void;\n  onChange: (card: CardState) => void;\n  className: string;\n  id: string | number;\n  title: string;\n  description: string;\n  tags: ITag[];\n  participants: IParticipant[];\n  cardDraggable: boolean;\n  editable: boolean;\n}\n\ninterface EditPopoverProps {\n  onDelete: () => void;\n  onArchive: () => void;\n}\n\nconst EditPopover: React.FC<EditPopoverProps> = ({ onDelete, onArchive, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <S.CardMenu selectable={false} {...props}>\n      <S.MenuItem key=\"1\" onClick={onDelete}>\n        {t('common.delete')}\n      </S.MenuItem>\n\n      <S.MenuItem key=\"2\" onClick={onArchive}>\n        {t('kanban.archive')}\n      </S.MenuItem>\n    </S.CardMenu>\n  );\n};\n\nexport const Card: React.FC<CardProps> = ({\n  style,\n  onClick,\n  onDelete,\n  onChange,\n  className,\n  id,\n  title,\n  description,\n  tags = [],\n  participants = [],\n  cardDraggable,\n  editable,\n}) => {\n  const { t } = useTranslation();\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  const onArrowPress = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const updateCard = (card: CardState) => {\n    onChange({ ...card, id });\n  };\n\n  const onDeleteCard = () => {\n    onDelete();\n  };\n\n  const updateTags = (tags: ITag[]) => {\n    updateCard({ tags });\n  };\n\n  const updateParticipants = (participants: IParticipant[]) => {\n    updateCard({ participants });\n  };\n\n  return (\n    <S.CardWrapper data-id={id} onClick={onClick} style={style} className={className}>\n      <S.CollapseCard onChange={onArrowPress} bordered={false} defaultActiveKey={['1']}>\n        <S.CardContent\n          showArrow={false}\n          key=\"1\"\n          header={\n            <S.CardHeader>\n              <S.CardTitle\n                draggable={cardDraggable}\n                onClick={(e: MouseEvent) => {\n                  e.stopPropagation();\n                }}\n              >\n                {editable ? (\n                  <S.Input\n                    name=\"title\"\n                    value={title}\n                    border\n                    placeholder={t('kanban.title')}\n                    resize=\"vertical\"\n                    onSave={(value: string) => updateCard({ title: value })}\n                  />\n                ) : (\n                  title\n                )}\n              </S.CardTitle>\n              <S.CardRightContent>\n                <Button noStyle type=\"text\" icon={<S.ArrowDownIcon $expanded={isExpanded} />} />\n                <Dropdown\n                  overlay={<EditPopover onDelete={onDeleteCard} onArchive={onDeleteCard} />}\n                  placement=\"bottomRight\"\n                  trigger={['click']}\n                >\n                  <Button\n                    noStyle\n                    type=\"text\"\n                    icon={<MoreOutlined />}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                    }}\n                  />\n                </Dropdown>\n              </S.CardRightContent>\n            </S.CardHeader>\n          }\n        >\n          <S.CardDetails>\n            {editable ? (\n              <S.Input\n                value={description}\n                border\n                placeholder={t('kanban.description')}\n                resize=\"vertical\"\n                onSave={(value: string) => updateCard({ description: value })}\n              />\n            ) : (\n              description\n            )}\n          </S.CardDetails>\n          <S.CardFooter>\n            <TagDropdown selectedTags={tags} setSelectedTags={updateTags} />\n          </S.CardFooter>\n\n          <S.ParticipantsWrapper>\n            <ParticipantsDropdown selectedParticipants={participants} setSelectedParticipants={updateParticipants} />\n          </S.ParticipantsWrapper>\n        </S.CardContent>\n      </S.CollapseCard>\n    </S.CardWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { LaneHeader } from 'react-trello/dist/styles/Base';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\n\nexport const Header = styled(LaneHeader)`\n  color: var(--text-main-color);\n  width: 16rem;\n  padding: 0;\n`;\n\nexport const Title = styled.div`\n  font-size: ${FONT_SIZE.lg};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: ${FONT_WEIGHT.bold};\n  color: var(--primary-color);\n`;\n\nexport const Dot = styled.span`\n  padding-left: 0.625rem;\n  padding-right: 0.3125rem;\n`;\n","import React, { useMemo } from 'react';\nimport InlineInput from 'react-trello/dist/widgets/InlineInput';\nimport * as S from './LaneHeader.styles';\nimport { CardState } from '../interfaces';\n\ninterface LaneHeaderProps {\n  updateTitle: () => void;\n  editLaneTitle: boolean;\n  style: CSSStyleSheet;\n  title: string;\n  onDoubleClick: () => void;\n  cards: Array<CardState>;\n}\n\nexport const LaneHeader: React.FC<LaneHeaderProps> = ({\n  updateTitle,\n  onDoubleClick,\n  editLaneTitle = false,\n  title,\n  style,\n  cards,\n}) => {\n  const numberOfCards = useMemo(() => (cards?.length ? `${cards.length}` : ''), [cards?.length]);\n  return (\n    <S.Header onDoubleClick={onDoubleClick} editLaneTitle={editLaneTitle} style={style}>\n      <S.Title>\n        {editLaneTitle ? (\n          <InlineInput value={title} border placeholder={title} resize=\"vertical\" onSave={updateTitle} />\n        ) : (\n          <>\n            {title}\n            {cards.length ? <S.Dot>·</S.Dot> : ''}\n            {numberOfCards}\n          </>\n        )}\n      </S.Title>\n    </S.Header>\n  );\n};\n","import { BORDER_RADIUS, FONT_SIZE } from '@app/styles/themes/constants';\nimport styled from 'styled-components';\n\nexport const AddCardWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 3.75rem;\n  width: 100%;\n  border: 1px solid var(--border-color);\n  border-radius: ${BORDER_RADIUS};\n  cursor: pointer;\n  font-size: ${FONT_SIZE.xxl};\n  color: var(--border-color);\n`;\n","import React from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport * as S from './AddCardLink.styles';\n\ninterface AddCardLinkProps {\n  onClick: () => void;\n}\n\nexport const AddCardLink: React.FC<AddCardLinkProps> = ({ onClick }) => {\n  return (\n    <S.AddCardWrapper onClick={onClick}>\n      <PlusOutlined />\n    </S.AddCardWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { NewLaneSection as NewLane } from 'react-trello/dist/styles/Base';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\n\nexport const NewLaneSection = styled(NewLane)`\n  background: var(--skyblue);\n  margin-top: 53.28px; // Calculate based on lanes padding, margin and lane header height\n  height: 24rem;\n  width: 16rem;\n  border-radius: 0.4375rem;\n  filter: drop-shadow(0 4px 40px rgba(0, 0, 0, 0.07));\n  padding: 3.4375rem 1.5625rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CreateNewColumn = styled.div`\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n  color: var(--text-secondary-color);\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const NewLaneImage = styled.img`\n  margin-top: 3.25rem;\n  height: 12.625rem;\n`;\n\nexport const PlusIcon = styled(PlusOutlined)`\n  font-size: ${FONT_SIZE.md};\n  color: var(--text-secondary-color);\n  margin-right: 0.625rem;\n`;\n","export default __webpack_public_path__ + \"static/media/new-lane.87c2f5c8.webp\";","import React from 'react';\nimport * as S from './NewLaneSection.styles';\nimport NewLaneImage from '../../../../assets/images/new-lane.webp';\nimport { useTranslation } from 'react-i18next';\n\ninterface NewLaneSectionProps {\n  onClick: () => void;\n}\n\nexport const NewLaneSection: React.FC<NewLaneSectionProps> = ({ onClick }) => {\n  const { t } = useTranslation();\n  return (\n    <S.NewLaneSection onClick={onClick}>\n      <S.CreateNewColumn>\n        <S.PlusIcon />\n        {t('kanban.createColumn')}\n      </S.CreateNewColumn>\n      <S.NewLaneImage src={NewLaneImage} />\n    </S.NewLaneSection>\n  );\n};\n","import styled from 'styled-components';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BORDER_RADIUS, FONT_SIZE, FONT_WEIGHT, media } from '@app/styles/themes/constants';\n\nexport const Form = styled(BaseButtonsForm)`\n  width: 16rem;\n  border-radius: ${BORDER_RADIUS};\n  background-color: var(--background-color);\n  padding: 1.25rem 1rem;\n`;\n\nexport const FooterButtons = styled(BaseButtonsGroup)`\n  margin-top: 1rem;\n  margin-bottom: 0.625rem;\n`;\n\nexport const FormInput = styled(BaseButtonsForm.Item)`\n  @media only screen and ${media.xl} {\n    margin-bottom: 1.5rem;\n  }\n\n  font-weight: ${FONT_WEIGHT.medium};\n  max-height: 1.25rem;\n  & .ant-input {\n    padding: 0;\n    font-size: ${FONT_SIZE.md};\n    font-weight: inherit;\n  }\n  & .ant-input::placeholder {\n    color: var(--text-light-color);\n  }\n  & .ant-form-item-control-input {\n    min-height: auto;\n  }\n`;\n","import React from 'react';\nimport { Input } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './NewLaneForm.styles';\n\ninterface NewLaneFormProps {\n  onAdd: (values: { id: string; title: string }) => void;\n  onCancel: () => void;\n}\n\nexport const NewLaneForm: React.FC<NewLaneFormProps> = ({ onAdd, onCancel }) => {\n  const { t } = useTranslation();\n  const handleSubmit = (values: { title: string }) => {\n    onAdd({\n      id: uuidv4(),\n      title: values.title || t('kanban.unnamedLabel'),\n    });\n  };\n\n  return (\n    <S.Form\n      name=\"addCard\"\n      isFieldsChanged\n      footer={<S.FooterButtons size=\"small\" onCancel={onCancel} />}\n      onFinish={handleSubmit}\n    >\n      <S.FormInput name={'title'}>\n        <Input placeholder={t('kanban.title')} bordered={false} />\n      </S.FormInput>\n    </S.Form>\n  );\n};\n","import { kanbanTags } from './kanbanTags';\nimport { kanbanPeople } from './kanbanPeople';\n\nconst { high, medium, low, ui, dev } = kanbanTags;\nconst { anna, pavel } = kanbanPeople;\n\nexport const kanbanData = {\n  lanes: [\n    {\n      id: '1',\n      title: 'Backlog',\n      cards: [\n        {\n          id: '11',\n          title: 'Marketing',\n          description:\n            'Nam augue nibh, lobortis quis velit quis, pretium ultricies ante. Aenean nisi nibh, ornare id augue id, pharetra feugiat orci.',\n          tags: [high],\n          participants: [anna, pavel],\n        },\n        {\n          id: '12',\n          title: 'Build a sales team',\n          description:\n            'Fusce facilisis massa mauris, id varius justo ornare sit amet. Vivamus ut blandit nibh. Curabitur in feugiat mi.',\n          tags: [medium, dev],\n          participants: [anna, pavel],\n        },\n        {\n          id: '13',\n          title: 'Explain every detail of the product',\n          description:\n            'Praesent eget eleifend neque, a fermentum ex. Etiam ligula tellus, fringilla lobortis ultricies at, congue id sapien. Proin ex urna, accumsan id mattis sit amet, bibendum sed neque. Suspendisse consectetur justo purus. Duis sit amet ornare risus.',\n          tags: [low, dev],\n          participants: [anna, pavel],\n        },\n      ],\n    },\n    {\n      id: '2',\n      title: 'In Progress',\n      cards: [\n        {\n          id: '21',\n          title: 'Plan the build',\n          description:\n            'Quisque ultricies est non orci vestibulum, et iaculis mauris euismod. Interdum et malesuada fames ac ante ipsum primis in faucibus. Curabitur vulputate auctor massa vehicula iaculis.',\n          tags: [ui],\n          participants: [anna],\n        },\n        {\n          id: '22',\n          title: 'Rich $1 billion valuation',\n          description:\n            'Phasellus ornare massa non cursus aliquet. Fusce pulvinar metus quis dui eleifend maximus. Proin nec libero aliquet, feugiat neque a, lobortis ipsum.',\n          tags: [medium],\n          participants: [anna, pavel],\n        },\n      ],\n    },\n    {\n      id: '3',\n      title: 'Ready for test',\n      cards: [\n        {\n          id: '31',\n          title: 'Brainstorming meetings',\n          description:\n            'Phasellus eu neque at dui dapibus tristique vel quis nunc. Nam eget ultrices urna, tincidunt tempus lacus. Aenean quis euismod odio, et bibendum felis.',\n          tags: [dev],\n          participants: [pavel],\n        },\n        {\n          id: '32',\n          title: 'Research how to crush the competition',\n          description: `Etiam varius purus ut dolor ultrices, id eleifend ligula lobortis. Nunc sagittis libero id enim ultrices consequat. Fusce facilisis dui vulputate nisi malesuada, nec mollis tellus dapibus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae;`,\n          tags: [low, dev],\n        },\n        {\n          id: '33',\n          title: 'Aquire funding for scaling',\n          description:\n            'Sed a euismod ligula. Interdum et malesuada fames ac ante ipsum primis in faucibus. Morbi venenatis sem nec est cursus, at commodo massa luctus.',\n          tags: [high],\n        },\n      ],\n    },\n    {\n      id: '4',\n      title: 'Done',\n      cards: [\n        {\n          id: '41',\n          title: 'Finalize requirements',\n          description:\n            'onec dictum mauris nisi, a ultricies turpis dignissim in. Nullam eleifend mauris sed augue malesuada porttitor a nec sapien. Sed nec ex ex. Mauris tellus felis, aliquet quis nulla sit amet, venenatis pharetra mauris. Nunc felis ligula, porta nec gravida a, maximus a purus.',\n          tags: [medium],\n        },\n        {\n          id: '42',\n          title: 'Reach $0.5 billion valuation',\n          description: `Nam elementum dui rutrum massa consectetur volutpat. Aenean congue massa ac dictum fringilla. Quisque in nunc id ligula condimentum aliquam. Maecenas volutpat, tellus at ornare cursus, risus neque ornare erat, at euismod nisi diam a justo.`,\n          tags: [low, dev],\n        },\n      ],\n    },\n  ],\n};\n","import { LAYOUT } from '@app/styles/themes/constants';\nimport { media } from '@app/styles/themes/constants';\nimport Board from 'react-trello';\nimport styled from 'styled-components';\n\nexport const Kanban = styled(Board)`\n  background: transparent;\n  height: 100%;\n  padding: 0 ${LAYOUT.mobile.paddingHorizontal};\n\n  margin: 0 -${LAYOUT.mobile.paddingHorizontal};\n\n  @media only screen and ${media.md} {\n    padding: 0 ${LAYOUT.desktop.paddingHorizontal};\n    margin: 0 -${LAYOUT.desktop.paddingHorizontal};\n  }\n`;\n","import React from 'react';\nimport { NewCardForm } from '../newCardForm/NewCardForm/NewCardForm';\nimport { Card } from '../Card/Card';\nimport { LaneHeader } from '../LaneHeader/LaneHeader';\nimport { AddCardLink } from '../AddCardLink/AddCardLink';\nimport { NewLaneSection } from '../NewLaneSection/NewLaneSection';\nimport { NewLaneForm } from '../NewLaneForm/NewLaneForm';\nimport { kanbanData } from '@app/constants/kanbanData';\nimport * as S from './Kanban.styles';\nimport { BORDER_RADIUS } from '@app/styles/themes/constants';\n\nexport const Kanban: React.FC = () => {\n  return (\n    <S.Kanban\n      components={{\n        Card,\n        NewCardForm,\n        LaneHeader,\n        AddCardLink,\n        NewLaneSection,\n        NewLaneForm,\n      }}\n      editable\n      laneDraggable\n      canAddLanes\n      data={kanbanData}\n      laneStyle={{ background: 'transparent', maxHeight: '100%' }}\n      cardStyle={{\n        borderRadius: BORDER_RADIUS,\n        backgroundColor: 'var(--background-color)',\n        padding: `1.25rem 1rem`,\n        marginBottom: '1rem',\n        minWidth: '16rem',\n        maxWidth: '16rem',\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Kanban } from '@app/components/apps/kanban/Kanban/Kanban';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\n\nconst KanbanPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('common.kanban')}</PageTitle>\n      <Kanban />\n    </>\n  );\n};\n\nexport default KanbanPage;\n"],"sourceRoot":""}