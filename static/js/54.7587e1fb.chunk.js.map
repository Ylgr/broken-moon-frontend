{"version":3,"sources":["pages/uiComponentsPages/modals/ModalsPage.tsx"],"names":["ModalsPage","t","useTranslation","useState","isBasicModalVisible","setIsBasicModalVisible","isSmallModalVisible","setIsSmallModalVisible","isMiddleModalVisible","setIsMiddleModalVisible","isLargeModalVisible","setIsLargeModalVisible","isFullscreenModalVisible","setIsFullscreenModalVisible","title","type","onClick","visible","onOk","onCancel","centered","size","width","severity","SuccessModal","content","InfoModal","WarningModal","ErrorModal"],"mappings":"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","file":"static/js/54.7587e1fb.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Col } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Modal, InfoModal, SuccessModal, WarningModal, ErrorModal } from '@app/components/common/Modal/Modal';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\n\nconst ModalsPage: React.FC = () => {\n  const { t } = useTranslation();\n  const [isBasicModalVisible, setIsBasicModalVisible] = useState<boolean>(false);\n  const [isSmallModalVisible, setIsSmallModalVisible] = useState<boolean>(false);\n  const [isMiddleModalVisible, setIsMiddleModalVisible] = useState<boolean>(false);\n  const [isLargeModalVisible, setIsLargeModalVisible] = useState<boolean>(false);\n  const [isFullscreenModalVisible, setIsFullscreenModalVisible] = useState<boolean>(false);\n\n  const success = () => {\n    SuccessModal({\n      title: t('modals.successTitle'),\n      content: t('modals.someContent'),\n    });\n  };\n\n  const info = () => {\n    InfoModal({\n      title: t('modals.infoTitle'),\n      content: t('modals.someContent'),\n    });\n  };\n\n  const warning = () => {\n    WarningModal({\n      title: t('modals.warningTitle'),\n      content: t('modals.someContent'),\n    });\n  };\n\n  const error = () => {\n    ErrorModal({\n      title: t('modals.errorTitle'),\n      content: t('modals.someContent'),\n    });\n  };\n\n  return (\n    <>\n      <PageTitle>{t('common.modal')}</PageTitle>\n      <Col>\n        <S.Card title={t('modals.basic')}>\n          <Button type=\"primary\" onClick={() => setIsBasicModalVisible(true)}>\n            {t('modals.open')}\n          </Button>\n          <Modal\n            title={t('modals.basic')}\n            visible={isBasicModalVisible}\n            onOk={() => setIsBasicModalVisible(false)}\n            onCancel={() => setIsBasicModalVisible(false)}\n          >\n            <p>{t('modals.someContent')}</p>\n            <p>{t('modals.someContent')}</p>\n            <p>{t('modals.someContent')}</p>\n          </Modal>\n        </S.Card>\n        <S.Card title={t('modals.sizes')}>\n          <Button type=\"primary\" onClick={() => setIsSmallModalVisible(true)}>\n            {t('modals.small')}\n          </Button>\n          <Button type=\"primary\" onClick={() => setIsMiddleModalVisible(true)}>\n            {t('modals.middle')}\n          </Button>\n          <Button type=\"primary\" onClick={() => setIsLargeModalVisible(true)}>\n            {t('modals.large')}\n          </Button>\n          <Button type=\"primary\" onClick={() => setIsFullscreenModalVisible(true)}>\n            {t('modals.fullscreen')}\n          </Button>\n          <Modal\n            title={t('modals.smallTitle')}\n            centered\n            visible={isSmallModalVisible}\n            onOk={() => setIsSmallModalVisible(false)}\n            onCancel={() => setIsSmallModalVisible(false)}\n            size=\"small\"\n          >\n            <p>{t('modals.someContent')}</p>\n            <p>{t('modals.someContent')}</p>\n            <p>{t('modals.someContent')}</p>\n          </Modal>\n          <Modal\n            title={t('modals.middleTitle')}\n            centered\n            visible={isMiddleModalVisible}\n            onOk={() => setIsMiddleModalVisible(false)}\n            onCancel={() => setIsMiddleModalVisible(false)}\n            size=\"medium\"\n          >\n            <p>{t('modals.someContent')}</p>\n            <p>{t('modals.someContent')}</p>\n            <p>{t('modals.someContent')}</p>\n          </Modal>\n          <Modal\n            title={t('modals.largeTitle')}\n            centered\n            visible={isLargeModalVisible}\n            onOk={() => setIsLargeModalVisible(false)}\n            onCancel={() => setIsLargeModalVisible(false)}\n            size=\"large\"\n          >\n            <p>{t('modals.someContent')}</p>\n            <p>{t('modals.someContent')}</p>\n            <p>{t('modals.someContent')}</p>\n          </Modal>\n          <Modal\n            title={t('modals.fullscreenTitle')}\n            centered\n            visible={isFullscreenModalVisible}\n            onOk={() => setIsFullscreenModalVisible(false)}\n            onCancel={() => setIsFullscreenModalVisible(false)}\n            width={'100%'}\n          >\n            <p>{t('modals.someContent')}</p>\n            <p>{t('modals.someContent')}</p>\n            <p>{t('modals.someContent')}</p>\n          </Modal>\n        </S.Card>\n        <S.Card title={t('modals.infoModal')}>\n          <Button severity=\"success\" type=\"default\" onClick={success}>\n            {t('modals.success')}\n          </Button>\n          <Button severity=\"info\" type=\"default\" onClick={info}>\n            {t('modals.info')}\n          </Button>\n          <Button severity=\"warning\" type=\"default\" onClick={warning}>\n            {t('modals.warning')}\n          </Button>\n          <Button severity=\"error\" type=\"default\" onClick={error}>\n            {t('modals.error')}\n          </Button>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default ModalsPage;\n"],"sourceRoot":""}