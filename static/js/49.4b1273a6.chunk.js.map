{"version":3,"sources":["components/common/Skeleton/Skeleton.styles.ts","components/common/Skeleton/Skeleton.tsx","pages/uiComponentsPages/feedback/SkeletonsPage.tsx"],"names":["Skeleton","styled","AntSkeleton","SkeletonButton","AntdSkeleton","Button","SkeletonInput","Input","SkeletonAvatar","Avatar","SkeletonImage","Image","props","FormItem","Form","Item","media","xs","md","SkeletonsPage","t","useTranslation","useState","active","block","size","state","setState","handleShapeChange","prop","e","target","value","PageTitle","title","avatar","paragraph","rows","wrap","shape","buttonShape","avatarShape","style","width","layout","label","Switch","checked","onChange","Group"],"mappings":"4PAGaA,EAAWC,kBAAOC,IAAPD,CAAH,0B,OCEXE,EAINC,IAJFC,OACOC,EAGLF,IAHFG,MACQC,EAENJ,IAFFK,OACOC,EACLN,IADFO,MAGWX,EAAoC,SAACY,GAChD,OAAO,cAAC,EAAD,eAAgBA,K,iCCInBC,EAAWZ,kBAAOa,IAAKC,KAAZd,CAAH,0JACae,IAAMC,GAIND,IAAME,IAiGlBC,UA5FiB,WAC9B,IAAQC,EAAMC,cAAND,EACR,EAA0BE,mBAMvB,CACDC,QAAQ,EACRC,OAAO,EACPC,KAAM,YATR,mBAAOC,EAAP,KAAcC,EAAd,KAwBMC,EAAoB,SAACC,GAAD,OAAkB,SAACC,GAC3CH,EAAS,2BAAKD,GAAN,kBAAcG,EAAOC,EAAEC,OAAOC,WAGxC,OACE,qCACE,cAACC,EAAA,EAAD,UAAYb,EAAE,qBACd,eAAC,IAAD,WACE,cAAC,IAAD,CAAQc,MAAOd,EAAE,mBAAjB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAQc,MAAOd,EAAE,qBAAjB,SACE,cAAC,EAAD,CAAUe,QAAM,EAACC,UAAW,CAAEC,KAAM,OAEtC,cAAC,IAAD,CAAQH,MAAOd,EAAE,oBAAjB,SACE,cAAC,EAAD,CAAUG,QAAM,MAElB,cAAC,IAAD,CAAQW,MAAOd,EAAE,2BAAjB,SACE,gCACE,eAAC,IAAD,CAAOkB,MAAI,EAAX,UACE,cAACnC,EAAD,CAAgBoB,OAAQG,EAAMH,OAAQE,KAAMC,EAAMD,KAAMc,MAAOb,EAAMc,YAAahB,MAAOE,EAAMF,QAC/F,cAAChB,EAAD,CAAgBe,OAAQG,EAAMH,OAAQE,KAAMC,EAAMD,KAAMc,MAAOb,EAAMe,cACrE,cAACnC,EAAD,CAAeoC,MAAO,CAAEC,MAAO,KAAOpB,OAAQG,EAAMH,OAAQE,KAAMC,EAAMD,UAE1E,uBACA,uBACA,cAACtB,EAAD,CAAgBoB,OAAQG,EAAMH,OAAQE,KAAMC,EAAMD,KAAMc,MAAOb,EAAMc,YAAahB,MAAOE,EAAMF,QAC/F,uBACA,uBACA,cAACd,EAAD,IACA,cAAC,IAAD,IACA,eAAC,IAAD,CAAMkC,OAAO,SAAb,UACE,cAAC/B,EAAD,CAAUgC,MAAOzB,EAAE,yBAAnB,SACE,cAAC0B,EAAA,EAAD,CAAQC,QAASrB,EAAMH,OAAQyB,SA7ClB,SAACD,GAC1BpB,EAAS,2BAAKD,GAAN,IAAaH,OAAQwB,UA8CnB,cAAClC,EAAD,CAAUgC,MAAOzB,EAAE,yBAAnB,SACE,cAAC0B,EAAA,EAAD,CAAQC,QAASrB,EAAMF,MAAOwB,SA5ClB,SAACD,GACzBpB,EAAS,2BAAKD,GAAN,IAAaF,MAAOuB,UA6ClB,cAAClC,EAAD,CAAUgC,MAAOzB,EAAE,kBAAnB,SACE,eAAC,IAAM6B,MAAP,CAAajB,MAAON,EAAMD,KAAMuB,SA3CrB,SAAClB,GACxBH,EAAS,2BAAKD,GAAN,IAAaD,KAAMK,EAAEC,OAAOC,UA0CxB,UACE,cAAC,IAAM3B,OAAP,CAAc2B,MAAM,UAApB,SAA+BZ,EAAE,uBACjC,cAAC,IAAMf,OAAP,CAAc2B,MAAM,QAApB,SAA6BZ,EAAE,qBAC/B,cAAC,IAAMf,OAAP,CAAc2B,MAAM,QAApB,SAA6BZ,EAAE,0BAGnC,cAACP,EAAD,CAAUgC,MAAOzB,EAAE,yBAAnB,SACE,eAAC,IAAM6B,MAAP,CAAajB,MAAON,EAAMc,YAAaQ,SAAUpB,EAAkB,eAAnE,UACE,cAAC,IAAMvB,OAAP,CAAc2B,MAAM,UAApB,SAA+BZ,EAAE,uBACjC,cAAC,IAAMf,OAAP,CAAc2B,MAAM,QAApB,SAA6BZ,EAAE,qBAC/B,cAAC,IAAMf,OAAP,CAAc2B,MAAM,SAApB,SAA8BZ,EAAE,2BAGpC,cAACP,EAAD,CAAUgC,MAAOzB,EAAE,yBAAnB,SACE,eAAC,IAAM6B,MAAP,CAAajB,MAAON,EAAMe,YAAaO,SAAUpB,EAAkB,eAAnE,UACE,cAAC,IAAMvB,OAAP,CAAc2B,MAAM,SAApB,SAA8BZ,EAAE,sBAChC,cAAC,IAAMf,OAAP,CAAc2B,MAAM,SAApB,SAA8BZ,EAAE","file":"static/js/49.4b1273a6.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Skeleton as AntSkeleton } from 'antd';\n\nexport const Skeleton = styled(AntSkeleton)``;\n","import React from 'react';\nimport { Skeleton as AntdSkeleton, SkeletonProps } from 'antd';\nimport * as S from './Skeleton.styles';\n\nexport const {\n  Button: SkeletonButton,\n  Input: SkeletonInput,\n  Avatar: SkeletonAvatar,\n  Image: SkeletonImage,\n} = AntdSkeleton;\n\nexport const Skeleton: React.FC<SkeletonProps> = (props) => {\n  return <S.Skeleton {...props} />;\n};\n","import React, { useState } from 'react';\nimport { Col, Space, Divider, Form, Radio, RadioChangeEvent } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport {\n  Skeleton,\n  SkeletonButton,\n  SkeletonInput,\n  SkeletonAvatar,\n  SkeletonImage,\n} from '@app/components/common/Skeleton/Skeleton';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\nimport { media } from '@app/styles/themes/constants';\nimport { Switch } from '@app/components/common/Switch/Switch';\n\nconst FormItem = styled(Form.Item)`\n  @media only screen and ${media.xs} {\n    max-width: fit-content;\n  }\n\n  @media only screen and ${media.md} {\n    max-width: 100%;\n  }\n`;\n\nconst SkeletonsPage: React.FC = () => {\n  const { t } = useTranslation();\n  const [state, setState] = useState<{\n    active: boolean;\n    block: boolean;\n    size?: 'default' | 'large' | 'small';\n    buttonShape?: 'circle' | 'square' | 'round';\n    avatarShape?: 'circle' | 'square';\n  }>({\n    active: false,\n    block: false,\n    size: 'default',\n  });\n\n  const handleActiveChange = (checked: boolean) => {\n    setState({ ...state, active: checked });\n  };\n\n  const handleBlockChange = (checked: boolean) => {\n    setState({ ...state, block: checked });\n  };\n\n  const handleSizeChange = (e: RadioChangeEvent) => {\n    setState({ ...state, size: e.target.value });\n  };\n\n  const handleShapeChange = (prop: string) => (e: RadioChangeEvent) => {\n    setState({ ...state, [prop]: e.target.value });\n  };\n\n  return (\n    <>\n      <PageTitle>{t('common.skeleton')}</PageTitle>\n      <Col>\n        <S.Card title={t('skeletons.basic')}>\n          <Skeleton />\n        </S.Card>\n        <S.Card title={t('skeletons.complex')}>\n          <Skeleton avatar paragraph={{ rows: 4 }} />\n        </S.Card>\n        <S.Card title={t('skeletons.active')}>\n          <Skeleton active />\n        </S.Card>\n        <S.Card title={t('skeletons.customization')}>\n          <div>\n            <Space wrap>\n              <SkeletonButton active={state.active} size={state.size} shape={state.buttonShape} block={state.block} />\n              <SkeletonAvatar active={state.active} size={state.size} shape={state.avatarShape} />\n              <SkeletonInput style={{ width: 200 }} active={state.active} size={state.size} />\n            </Space>\n            <br />\n            <br />\n            <SkeletonButton active={state.active} size={state.size} shape={state.buttonShape} block={state.block} />\n            <br />\n            <br />\n            <SkeletonImage />\n            <Divider />\n            <Form layout=\"inline\">\n              <FormItem label={t('skeletons.activeLabel')}>\n                <Switch checked={state.active} onChange={handleActiveChange} />\n              </FormItem>\n              <FormItem label={t('skeletons.buttonBlock')}>\n                <Switch checked={state.block} onChange={handleBlockChange} />\n              </FormItem>\n              <FormItem label={t('skeletons.size')}>\n                <Radio.Group value={state.size} onChange={handleSizeChange}>\n                  <Radio.Button value=\"default\">{t('skeletons.default')}</Radio.Button>\n                  <Radio.Button value=\"large\">{t('skeletons.large')}</Radio.Button>\n                  <Radio.Button value=\"small\">{t('skeletons.small')}</Radio.Button>\n                </Radio.Group>\n              </FormItem>\n              <FormItem label={t('skeletons.buttonShape')}>\n                <Radio.Group value={state.buttonShape} onChange={handleShapeChange('buttonShape')}>\n                  <Radio.Button value=\"default\">{t('skeletons.default')}</Radio.Button>\n                  <Radio.Button value=\"round\">{t('skeletons.round')}</Radio.Button>\n                  <Radio.Button value=\"circle\">{t('skeletons.circle')}</Radio.Button>\n                </Radio.Group>\n              </FormItem>\n              <FormItem label={t('skeletons.avatarShape')}>\n                <Radio.Group value={state.avatarShape} onChange={handleShapeChange('avatarShape')}>\n                  <Radio.Button value=\"square\">{t('skeletons.square')}</Radio.Button>\n                  <Radio.Button value=\"circle\">{t('skeletons.circle')}</Radio.Button>\n                </Radio.Group>\n              </FormItem>\n            </Form>\n          </div>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default SkeletonsPage;\n"],"sourceRoot":""}