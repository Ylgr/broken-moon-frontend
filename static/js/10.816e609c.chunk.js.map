{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","components/common/Radio/Radio.styles.ts","components/common/Radio/Radio.tsx","components/common/pickers/DatePicker.tsx","components/common/Upload/Upload.styles.ts","components/common/Upload/Upload.tsx","components/common/Rate/Rate.styles.ts","components/common/Rate/Rate.tsx","components/forms/DynamicForm/DynamicForm.styles.ts","components/forms/DynamicForm/DynamicForm.tsx","components/common/inputs/InputNumber/InputNumber.styles.ts","components/common/inputs/InputNumber/InputNumber.tsx","components/forms/ControlForm/AddUserFormModal.tsx","components/forms/ControlForm/useResetFormOnCloseModal.ts","components/forms/ControlForm/ControlForm.styles.ts","components/forms/ControlForm/ControlForm.tsx","components/common/Slider/Slider.styles.ts","components/common/Slider/Slider.tsx","components/forms/ValidationForm/ValidationForm.tsx","components/forms/StepForm/StepForm.styles.ts","components/forms/StepForm/Steps/Step1.tsx","components/forms/StepForm/Steps/Step2.tsx","components/forms/StepForm/Steps/Step3.tsx","components/forms/StepForm/Steps/Step4.tsx","components/forms/StepForm/StepForm.tsx","pages/AdvancedFormsPage.tsx"],"names":["BaseButtonsForm","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","BaseForm","useForm","formDefault","currentForm","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","BaseButtonsGroup","className","t","useTranslation","gutter","wrap","span","block","type","onClick","htmlType","Radio","styled","AntdRadio","RadioButton","Button","RadioGroup","Group","DatePicker","React","forwardRef","ref","Upload","AntdUpload","UploadDragger","Dragger","Rate","AntdRate","FONT_SIZE","lg","Wrapper","div","RemoveBtn","MinusCircleOutlined","DynamicForm","useState","isLoading","setLoading","areas","label","value","sights","Beijing","Shanghai","name","onFinish","values","setTimeout","notificationController","success","message","console","log","autoComplete","onFieldsChange","rules","required","Select","options","onChange","setFieldsValue","fields","add","remove","map","field","align","justify","noStyle","shouldUpdate","prevValues","curValues","area","fieldKey","key","disabled","getFieldValue","item","Input","icon","PlusOutlined","InputNumber","AntInputNumber","withConfig","shouldForwardProp","prop","includes","$block","AddUserFormModal","visible","prevVisibleRef","useRef","useEffect","current","prevVisible","useResetFormOnCloseModal","title","onOk","submit","layout","UserList","md","FONT_WEIGHT","semibold","Text","ul","ListItem","li","User","AddUserButton","labelCol","wrapperCol","ControlForm","setVisible","onFormFinish","forms","controlForm","users","length","user","index","UserOutlined","age","SmileOutlined","Slider","AntdSlider","formItemLayout","normFile","e","fileList","Array","isArray","ValidationForm","a","initialValues","rate","hasFeedback","placeholder","mode","min","max","valuePropName","Switch","tooltipVisible","marks","Checkbox","getValueFromEvent","action","listType","UploadOutlined","InboxOutlined","PhoneItem","Steps","AntdSteps","FormContent","PrevButton","CommonSelect","Details","DetailsRow","DetailsTitle","DetailsValue","Step1","InputPassword","dependencies","validator","_","Promise","reject","Error","resolve","Step2","prefixSelector","format","addonBefore","Step3","Step4","formValues","filter","StepForm","setCurrent","Dates","getDate","setFields","setIsLoading","formLabels","login","password","confirmPassword","salutation","gender","firstName","lastName","birthday","phone","email","address1","address2","zipCode","city","country","String","steps","formFieldsUi","allFields","currentFields","uniqueData","mergeBy","labelPlacement","size","Step","description","validateFields","then","AdvancedFormsPage","PageTitle","xs","sm","xl","Card","id","padding"],"mappings":"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","file":"static/js/10.816e609c.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React, { ComponentProps } from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\n\ninterface BaseButtonsGroupProps extends ComponentProps<typeof Button> {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className={className} gutter={[10, 10]} wrap={false}>\n      <Col span={12}>\n        <Button block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import styled from 'styled-components';\nimport { Radio as AntdRadio } from 'antd';\n\nexport const Radio = styled(AntdRadio)`\n  .ant-radio-disabled + span {\n    color: var(--disabled-color);\n  }\n`;\n\nexport const RadioButton = styled(AntdRadio.Button)`\n  &.ant-radio-button-wrapper-disabled {\n    color: var(--disabled-color);\n  }\n`;\n","import { Radio as AntdRadio, RadioProps } from 'antd';\nimport * as S from './Radio.styles';\n\nexport interface RadioChangeEventTarget extends RadioProps {\n  checked: boolean;\n}\nexport interface RadioChangeEvent {\n  target: RadioChangeEventTarget;\n  stopPropagation: () => void;\n  preventDefault: () => void;\n  nativeEvent: MouseEvent;\n}\n\nexport const { Group: RadioGroup } = AntdRadio;\n\nexport const Radio: React.FC<RadioProps> = (props) => {\n  return <S.Radio {...props} />;\n};\n\nexport const RadioButton: React.FC<RadioProps> = (props) => {\n  return <S.RadioButton {...props} />;\n};\n","import React from 'react';\nimport { PickerProps } from 'antd/lib/date-picker/generatePicker';\nimport { DayjsDatePicker } from './DayjsDatePicker';\nimport { AppDate } from 'constants/Dates';\n\ntype DatePickerProps = PickerProps<AppDate>;\n\nexport const DatePicker = React.forwardRef<React.Component<DatePickerProps>, DatePickerProps>(\n  ({ className, ...props }, ref) => <DayjsDatePicker ref={ref} className={className} {...props} />,\n);\n","import styled from 'styled-components';\nimport { Upload as AntdUpload } from 'antd';\n\nexport const Upload = styled(AntdUpload)``;\n","import { Upload as AntdUpload, UploadProps } from 'antd';\nimport * as S from './Upload.styles';\n\nexport const { Dragger: UploadDragger } = AntdUpload;\n\nexport const Upload: React.FC<UploadProps> = (props) => {\n  return <S.Upload {...props} />;\n};\n","import styled from 'styled-components';\nimport { Rate as AntdRate } from 'antd';\nimport { FONT_SIZE } from '@app/styles/themes/constants';\n\nexport const Rate = styled(AntdRate)`\n  font-size: ${FONT_SIZE.lg};\n`;\n","import { RateProps } from 'antd';\nimport * as S from './Rate.styles';\n\nexport const Rate: React.FC<RateProps> = (props) => {\n  return <S.Rate {...props} />;\n};\n","import { MinusCircleOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const RemoveBtn = styled(MinusCircleOutlined)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  transform: translateY(-150%);\n`;\n","import React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { notificationController } from '@app/controllers/notificationController';\nimport * as S from './DynamicForm.styles';\n\ninterface Sight {\n  [key: string]: string[];\n}\n\nexport const DynamicForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [form] = BaseButtonsForm.useForm();\n  const { t } = useTranslation();\n\n  const areas = [\n    { label: t('forms.dynamicFormLabels.beijing'), value: 'Beijing' },\n    { label: t('forms.dynamicFormLabels.shanghai'), value: 'Shanghai' },\n  ];\n\n  const sights: Sight = {\n    Beijing: [t('forms.dynamicFormLabels.tiananmen'), t('forms.dynamicFormLabels.greatWall')],\n    Shanghai: [t('forms.dynamicFormLabels.orientalPearl'), t('forms.dynamicFormLabels.theBund')],\n  };\n\n  const onFinish = (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  const handleChange = () => {\n    form.setFieldsValue({ sights: [] });\n  };\n\n  return (\n    <BaseButtonsForm\n      form={form}\n      name=\"dynamicForm\"\n      isFieldsChanged={isFieldsChanged}\n      loading={isLoading}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n      onFieldsChange={() => setFieldsChanged(true)}\n    >\n      <BaseButtonsForm.Item\n        name=\"area\"\n        label={t('forms.dynamicFormLabels.area')}\n        rules={[{ required: true, message: t('forms.dynamicFormLabels.areaError') }]}\n      >\n        <Select options={areas} onChange={handleChange} />\n      </BaseButtonsForm.Item>\n      <BaseButtonsForm.List name=\"sights\">\n        {(fields, { add, remove }) => (\n          <>\n            {fields.map((field) => (\n              <Row key={field.key} wrap={false} gutter={[10, 10]} align=\"middle\" justify=\"space-between\">\n                <Col span={12}>\n                  <BaseButtonsForm.Item\n                    noStyle\n                    // eslint-disable-next-line\n                    shouldUpdate={(prevValues: any, curValues: any) =>\n                      prevValues.area !== curValues.area || prevValues.sights !== curValues.sights\n                    }\n                  >\n                    {() => (\n                      <BaseButtonsForm.Item\n                        {...field}\n                        label={t('forms.dynamicFormLabels.sight')}\n                        name={[field.name, 'sight']}\n                        fieldKey={[field.key, 'sight']}\n                        rules={[{ required: true, message: t('forms.dynamicFormLabels.sightError') }]}\n                      >\n                        <Select disabled={!form.getFieldValue('area')}>\n                          {(sights[form.getFieldValue('area')] || []).map((item) => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      </BaseButtonsForm.Item>\n                    )}\n                  </BaseButtonsForm.Item>\n                </Col>\n                <Col span={12}>\n                  <BaseButtonsForm.Item\n                    {...field}\n                    label={t('forms.dynamicFormLabels.price')}\n                    name={[field.name, 'price']}\n                    fieldKey={[field.key, 'price']}\n                    rules={[{ required: true, message: t('forms.dynamicFormLabels.priceError') }]}\n                  >\n                    <S.Wrapper>\n                      <Input />\n                      <S.RemoveBtn onClick={() => remove(field.name)} />\n                    </S.Wrapper>\n                  </BaseButtonsForm.Item>\n                </Col>\n              </Row>\n            ))}\n\n            <BaseButtonsForm.Item>\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                {t('forms.dynamicFormLabels.addSights')}\n              </Button>\n            </BaseButtonsForm.Item>\n          </>\n        )}\n      </BaseButtonsForm.List>\n    </BaseButtonsForm>\n  );\n};\n","import { InputNumber as AntInputNumber } from 'antd';\nimport styled from 'styled-components';\n\ninterface InputNumberProps {\n  $block?: boolean;\n}\n\nexport const InputNumber = styled(AntInputNumber).withConfig({\n  shouldForwardProp: (prop) => !['block'].includes(prop),\n})<InputNumberProps>`\n  ${(props) => props.$block && 'display: block; width: 100%'};\n`;\n","import React from 'react';\nimport { InputNumberProps as AntdInputNumberProps } from 'antd';\nimport * as S from './InputNumber.styles';\n\nexport interface InputNumberProps extends AntdInputNumberProps {\n  className?: string;\n  $block?: boolean;\n}\n\nexport const InputNumber = React.forwardRef<HTMLInputElement, InputNumberProps>(\n  ({ className, children, $block, ...props }, ref) => (\n    <S.InputNumber ref={ref} className={className} $block={$block} {...props}>\n      {children}\n    </S.InputNumber>\n  ),\n);\n","import React from 'react';\nimport { Modal } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\nimport { useResetFormOnCloseModal } from './useResetFormOnCloseModal';\n\ninterface AddUserFormModalProps {\n  visible: boolean;\n  onCancel: () => void;\n}\n\nexport const AddUserFormModal: React.FC<AddUserFormModalProps> = ({ visible, onCancel }) => {\n  const [form] = BaseForm.useForm();\n  const { t } = useTranslation();\n\n  useResetFormOnCloseModal({\n    form,\n    visible,\n  });\n\n  const onOk = () => {\n    form.submit();\n  };\n\n  return (\n    <Modal title={t('forms.controlFormLabels.newUser')} visible={visible} onOk={onOk} onCancel={onCancel}>\n      <BaseForm form={form} layout=\"vertical\" name=\"userForm\">\n        <BaseForm.Item\n          name=\"name\"\n          label={t('common.name')}\n          rules={[{ required: true, message: t('common.requiredField') }]}\n        >\n          <Input />\n        </BaseForm.Item>\n        <BaseForm.Item\n          name=\"age\"\n          label={t('common.age')}\n          rules={[{ required: true, message: t('common.requiredField') }]}\n        >\n          <InputNumber $block />\n        </BaseForm.Item>\n      </BaseForm>\n    </Modal>\n  );\n};\n","import { useEffect, useRef } from 'react';\nimport { FormInstance } from 'antd';\n\nexport const useResetFormOnCloseModal = ({ form, visible }: { form: FormInstance; visible: boolean }): void => {\n  const prevVisibleRef = useRef<boolean>();\n  useEffect(() => {\n    prevVisibleRef.current = visible;\n  }, [visible]);\n  const prevVisible = prevVisibleRef.current;\n\n  useEffect(() => {\n    if (!visible && prevVisible) {\n      form.resetFields();\n    }\n  }, [visible, form, prevVisible]);\n};\n","import styled from 'styled-components';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\n\nexport const UserList = styled(BaseForm.Item)`\n  & label {\n    font-size: ${FONT_SIZE.md};\n    font-weight: ${FONT_WEIGHT.semibold};\n  }\n`;\n\nexport const Text = styled.div`\n  color: var(--primary-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.8rem;\n`;\n\nexport const User = styled.div`\n  color: var(--text-main-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n  margin-left: 0.5rem;\n`;\n\nexport const AddUserButton = styled(Button)`\n  margin: 0 0.5rem;\n`;\n","import React, { useState } from 'react';\nimport { Avatar } from 'antd';\nimport { SmileOutlined, UserOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { AddUserFormModal } from './AddUserFormModal';\nimport { Input } from '../../common/inputs/Input/Input';\nimport { Button } from '../../common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './ControlForm.styles';\nimport { notificationController } from '@app/controllers/notificationController';\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\ninterface UserType {\n  name: string;\n  age: string;\n}\n\nexport const ControlForm: React.FC = () => {\n  const [visible, setVisible] = useState(false);\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const showUserModal = () => {\n    setVisible(true);\n  };\n\n  const hideUserModal = () => {\n    setVisible(false);\n  };\n\n  const onFinish = (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setFieldsChanged(false);\n      setLoading(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm.Provider\n      onFormFinish={(name, { values, forms }) => {\n        if (name === 'userForm') {\n          const { controlForm } = forms;\n          const users = controlForm.getFieldValue('users') || [];\n          controlForm.setFieldsValue({ users: [...users, values] });\n          setVisible(false);\n        }\n      }}\n    >\n      <BaseButtonsForm\n        {...layout}\n        name=\"controlForm\"\n        isFieldsChanged={isFieldsChanged}\n        footer={\n          <BaseButtonsForm.Item>\n            <Button htmlType=\"submit\" type=\"primary\" loading={isLoading}>\n              {t('common.submit')}\n            </Button>\n            <S.AddUserButton type=\"default\" htmlType=\"button\" onClick={showUserModal}>\n              {t('forms.controlFormLabels.addUser')}\n            </S.AddUserButton>\n          </BaseButtonsForm.Item>\n        }\n        onFinish={onFinish}\n        onFieldsChange={() => setFieldsChanged(true)}\n      >\n        <BaseButtonsForm.Item\n          name=\"group\"\n          label={t('forms.controlFormLabels.groupName')}\n          rules={[{ required: true, message: t('forms.controlFormLabels.groupNameError') }]}\n        >\n          <Input />\n        </BaseButtonsForm.Item>\n        <S.UserList\n          label={t('forms.controlFormLabels.userList')}\n          // eslint-disable-next-line\n          shouldUpdate={(prevValues: any, curValues: any) => prevValues.users !== curValues.users}\n        >\n          {({ getFieldValue }) => {\n            const users: UserType[] = getFieldValue('users') || [];\n            return users.length ? (\n              <S.List>\n                {users.map((user, index) => (\n                  <S.ListItem key={index}>\n                    <Avatar icon={<UserOutlined />} />\n                    <S.User>\n                      {user.name} - {user.age}\n                    </S.User>\n                  </S.ListItem>\n                ))}\n              </S.List>\n            ) : (\n              <S.Text>\n                ( <SmileOutlined /> {t('forms.controlFormLabels.noUser')} )\n              </S.Text>\n            );\n          }}\n        </S.UserList>\n      </BaseButtonsForm>\n      <AddUserFormModal visible={visible} onCancel={hideUserModal} />\n    </BaseButtonsForm.Provider>\n  );\n};\n","import styled from 'styled-components';\nimport { Slider as AntdSlider } from 'antd';\n\nexport const Slider = styled(AntdSlider)`\n  & .ant-slider-mark-text:not(.ant-slider-mark-text-active) {\n    color: var(--subtext-color);\n  }\n`;\n","import { SliderSingleProps } from 'antd';\nimport * as S from './Slider.styles';\n\nexport const Slider: React.FC<SliderSingleProps> = (props) => {\n  return <S.Slider {...props} />;\n};\n","import { Row, Col } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputNumber } from '@app/components/common/inputs/InputNumber/InputNumber';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Switch } from '@app/components/common/Switch/Switch';\nimport { Radio, RadioButton, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { Slider } from '@app/components/common/Slider/Slider';\nimport { Upload, UploadDragger } from '@app/components/common/Upload/Upload';\nimport { Rate } from '@app/components/common/Rate/Rate';\nimport { Checkbox, CheckboxGroup } from '@app/components/common/Checkbox/Checkbox';\nimport { notificationController } from '@app/controllers/notificationController';\n\nconst formItemLayout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\nconst normFile = (e = { fileList: [] }) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e && e.fileList;\n};\n\nexport const ValidationForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const onFinish = async (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm\n      {...formItemLayout}\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n      name=\"validateForm\"\n      initialValues={{\n        'input-number': 3,\n        'checkbox-group': ['A', 'B'],\n        rate: 3.5,\n      }}\n      footer={\n        <BaseButtonsForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            {t('common.submit')}\n          </Button>\n        </BaseButtonsForm.Item>\n      }\n      onFinish={onFinish}\n    >\n      <BaseButtonsForm.Item\n        name=\"select\"\n        label={t('forms.validationFormLabels.select')}\n        hasFeedback\n        rules={[{ required: true, message: t('forms.validationFormLabels.countryError') }]}\n      >\n        <Select placeholder={t('forms.validationFormLabels.selectCountry')}>\n          <Option value=\"china\">{t('forms.validationFormLabels.china')}</Option>\n          <Option value=\"usa\">{t('forms.validationFormLabels.usa')}</Option>\n        </Select>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"select-multiple\"\n        label={t('forms.validationFormLabels.selectMultiple')}\n        rules={[{ required: true, message: t('forms.validationFormLabels.colorError'), type: 'array' }]}\n      >\n        <Select mode=\"multiple\" placeholder={t('forms.validationFormLabels.selectColor')}>\n          <Option value=\"red\">{t('forms.validationFormLabels.red')}</Option>\n          <Option value=\"green\">{t('forms.validationFormLabels.green')}</Option>\n          <Option value=\"blue\">{t('forms.validationFormLabels.blue')}</Option>\n        </Select>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item label={t('forms.validationFormLabels.inputNumber')}>\n        <label>\n          <BaseButtonsForm.Item name=\"input-number\" noStyle>\n            <InputNumber min={1} max={10} />\n          </BaseButtonsForm.Item>\n        </label>\n        <span> {t('forms.validationFormLabels.machines')}</span>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"switch\" label={t('forms.validationFormLabels.switch')} valuePropName=\"checked\">\n        <Switch />\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"slider\" label={t('forms.validationFormLabels.slider')}>\n        <Slider\n          tooltipVisible={false}\n          marks={{\n            0: 'A',\n            20: 'B',\n            40: 'C',\n            60: 'D',\n            80: 'E',\n            100: 'F',\n          }}\n        />\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"radio-group\" label={t('forms.validationFormLabels.radioGroup')}>\n        <RadioGroup>\n          <Radio value=\"a\">{t('forms.validationFormLabels.item')} 1</Radio>\n          <Radio value=\"b\">{t('forms.validationFormLabels.item')} 2</Radio>\n          <Radio value=\"c\">{t('forms.validationFormLabels.item')} 3</Radio>\n        </RadioGroup>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"radio-button\"\n        label={t('forms.validationFormLabels.radioButton')}\n        rules={[{ required: true, message: t('forms.validationFormLabels.itemError') }]}\n      >\n        <RadioGroup>\n          <RadioButton value=\"a\">{t('forms.validationFormLabels.item')} 1</RadioButton>\n          <RadioButton value=\"b\">{t('forms.validationFormLabels.item')} 2</RadioButton>\n          <RadioButton value=\"c\">{t('forms.validationFormLabels.item')} 3</RadioButton>\n        </RadioGroup>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"checkbox-group\" label={t('forms.validationFormLabels.checkboxGroup')}>\n        <CheckboxGroup>\n          <Row>\n            <Col span={8}>\n              <Checkbox value=\"A\">A</Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox value=\"B\" disabled>\n                B\n              </Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox value=\"C\">C</Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox value=\"D\">D</Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox value=\"E\">E</Checkbox>\n            </Col>\n            <Col span={8}>\n              <Checkbox value=\"F\">F</Checkbox>\n            </Col>\n          </Row>\n        </CheckboxGroup>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item name=\"rate\" label={t('forms.validationFormLabels.rate')}>\n        <Rate />\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item\n        name=\"upload\"\n        label={t('forms.validationFormLabels.upload')}\n        valuePropName=\"fileList\"\n        getValueFromEvent={normFile}\n      >\n        <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n          <Button type=\"default\" icon={<UploadOutlined />}>\n            {t('forms.validationFormLabels.clickToUpload')}\n          </Button>\n        </Upload>\n      </BaseButtonsForm.Item>\n\n      <BaseButtonsForm.Item label={t('forms.validationFormLabels.dragger')}>\n        <BaseButtonsForm.Item name=\"dragger\" valuePropName=\"fileList\" getValueFromEvent={normFile} noStyle>\n          <UploadDragger name=\"files\" action=\"/upload.do\">\n            <p>\n              <InboxOutlined />\n            </p>\n            <p>{t('forms.validationFormLabels.clickToDrag')}</p>\n            <p>{t('forms.validationFormLabels.supportSingle')}</p>\n          </UploadDragger>\n        </BaseButtonsForm.Item>\n      </BaseButtonsForm.Item>\n    </BaseButtonsForm>\n  );\n};\n","import styled from 'styled-components';\nimport { Select as CommonSelect } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { FONT_SIZE, FONT_WEIGHT } from '@app/styles/themes/constants';\nimport { Steps as AntdSteps } from 'antd';\n\nexport const PhoneItem = styled(BaseForm.Item)`\n  .ant-input-group-addon {\n    padding: 0;\n  }\n\n  .ant-input-group-addon > div {\n    width: 100% !important;\n  }\n`;\n\nexport const Steps = styled(AntdSteps)`\n  .ant-steps-item-process > .ant-steps-item-container > .ant-steps-item-content > .ant-steps-item-title {\n    color: var(--primary-color);\n  }\n\n  .ant-steps-item-wait > .ant-steps-item-container > .ant-steps-item-content > .ant-steps-item-title {\n    color: var(--subtext-color);\n  }\n\n  .ant-steps-item-wait .ant-steps-item-icon {\n    border-color: var(--subtext-color);\n    & > .ant-steps-icon {\n      color: var(--subtext-color);\n    }\n  }\n\n  & .ant-steps-item {\n    &-description,\n    &-subtitle {\n      color: var(--subtext-color) !important;\n    }\n  }\n`;\n\nexport const FormContent = styled.div`\n  margin: 1.25rem 0.5rem;\n`;\n\nexport const PrevButton = styled(Button)`\n  margin: 0 0.5rem;\n`;\n\nexport const Select = styled(CommonSelect)`\n  width: 5.9375rem;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n  margin: 1.25rem 0.5rem;\n`;\n\nexport const DetailsRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const DetailsTitle = styled.div`\n  color: var(--text-light-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n  margin-right: 0.5rem;\n`;\n\nexport const DetailsValue = styled.div`\n  color: var(--text-main-color);\n  font-size: ${FONT_SIZE.md};\n  font-weight: ${FONT_WEIGHT.semibold};\n`;\n","import { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport * as S from '../StepForm.styles';\n\nexport const Step1: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <S.FormContent>\n      <BaseForm.Item\n        name=\"login\"\n        label={t('forms.stepFormLabels.login')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.loginError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"password\"\n        label={t('common.password')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.passwordError') }]}\n      >\n        <InputPassword />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"confirmPassword\"\n        label={t('common.confirmPassword')}\n        dependencies={['password']}\n        rules={[\n          { required: true, message: t('common.confirmPasswordError') },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error(t('common.confirmPasswordError')));\n            },\n          }),\n        ]}\n      >\n        <InputPassword />\n      </BaseForm.Item>\n    </S.FormContent>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { RadioButton, RadioGroup } from '@app/components/common/Radio/Radio';\nimport { DatePicker } from '@app/components/common/pickers/DatePicker';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport * as S from '../StepForm.styles';\nimport React from 'react';\n\nexport const Step2: React.FC = () => {\n  const { t } = useTranslation();\n\n  const prefixSelector = (\n    <BaseForm.Item name=\"prefix\" noStyle>\n      <S.Select>\n        <Option value=\"375\">+375</Option>\n        <Option value=\"7\">+7</Option>\n      </S.Select>\n    </BaseForm.Item>\n  );\n\n  return (\n    <S.FormContent>\n      <BaseForm.Item\n        name=\"salutation\"\n        label={t('forms.stepFormLabels.salutation')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.salutationError') }]}\n      >\n        <RadioGroup>\n          <RadioButton value=\"mr\">{t('forms.stepFormLabels.mr')}</RadioButton>\n          <RadioButton value=\"mrs\">{t('forms.stepFormLabels.mrs')}</RadioButton>\n        </RadioGroup>\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"gender\"\n        label={t('forms.stepFormLabels.gender')}\n        rules={[{ required: true, message: t('common.requiredField') }]}\n      >\n        <Select placeholder={t('forms.stepFormLabels.gender')}>\n          <Option value=\"male\">{t('forms.stepFormLabels.male')}</Option>\n          <Option value=\"female\">{t('forms.stepFormLabels.female')}</Option>\n        </Select>\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"firstName\"\n        label={t('common.firstName')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.firstNameError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"lastName\"\n        label={t('common.lastName')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.lastNameError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"birthday\"\n        label={t('forms.stepFormLabels.birthday')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.birthdayError') }]}\n      >\n        <DatePicker format=\"YYYY-MM-DD\" />\n      </BaseForm.Item>\n      <S.PhoneItem\n        name=\"phone\"\n        label={t('common.phone')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.phoneError') }]}\n      >\n        <Input addonBefore={prefixSelector} />\n      </S.PhoneItem>\n      <BaseForm.Item\n        name=\"email\"\n        label={t('common.email')}\n        rules={[\n          {\n            type: 'email',\n            message: t('common.notValidEmail'),\n          },\n        ]}\n      >\n        <Input />\n      </BaseForm.Item>\n    </S.FormContent>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport * as S from '../StepForm.styles';\nimport React from 'react';\n\nexport const Step3: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <S.FormContent>\n      <BaseForm.Item\n        name=\"address1\"\n        label={`${t('common.address')} 1`}\n        rules={[{ required: true, message: t('forms.stepFormLabels.addressError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"address2\"\n        label={`${t('common.address')} 2`}\n        rules={[{ required: true, message: t('forms.stepFormLabels.addressError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"zipCode\"\n        label={t('common.zipcode')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.zipCodeError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"city\"\n        label={t('common.city')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.cityError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"country\"\n        label={t('common.country')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.countryError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n    </S.FormContent>\n  );\n};\n","import * as S from '../StepForm.styles';\n\ninterface Field {\n  name?: string;\n  value: string;\n}\n\ninterface Step4Props {\n  formValues: Field[];\n}\n\nexport const Step4: React.FC<Step4Props> = ({ formValues }) => {\n  return (\n    <S.Details key=\"4\">\n      {formValues\n        .filter((item) => !!item.value)\n        .map((item: Field, index: number) => {\n          return (\n            <S.DetailsRow key={index}>\n              <S.DetailsTitle>{item.name}</S.DetailsTitle>\n              <S.DetailsValue>{item.value}</S.DetailsValue>\n            </S.DetailsRow>\n          );\n        })}\n    </S.Details>\n  );\n};\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Step1 } from './Steps/Step1';\nimport { Step2 } from './Steps/Step2';\nimport { Step3 } from './Steps/Step3';\nimport { Step4 } from './Steps/Step4';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { Dates } from '@app/constants/Dates';\nimport { mergeBy } from '@app/utils/utils';\nimport * as S from './StepForm.styles';\nimport { Steps } from './StepForm.styles';\ninterface FormValues {\n  [key: string]: string | undefined;\n}\n\ninterface FieldData {\n  name: string | number;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value?: any;\n}\n\nexport const StepForm: React.FC = () => {\n  const [current, setCurrent] = useState(0);\n  const [form] = BaseForm.useForm();\n  const [fields, setFields] = useState<FieldData[]>([\n    { name: 'login', value: 'Jerri' },\n    { name: 'password', value: '123456' },\n    { name: 'confirmPassword', value: '123456' },\n    { name: 'salutation', value: 'mr' },\n    { name: 'gender', value: 'male' },\n    { name: 'firstName', value: 'John' },\n    { name: 'lastName', value: 'Black' },\n    { name: 'birthday', value: Dates.getDate(1576789200000) },\n    { name: 'phone', value: '298573124' },\n    { name: 'email', value: '' },\n    { name: 'address1', value: 'Slobodskay street' },\n    { name: 'address2', value: 'Nevski street' },\n    { name: 'zipCode', value: '435123' },\n    { name: 'city', value: 'Minsk' },\n    { name: 'country', value: 'Belarus' },\n    { name: 'prefix', value: '+7' },\n  ]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const formLabels: FormValues = {\n    login: t('forms.stepFormLabels.login'),\n    password: t('common.password'),\n    confirmPassword: t('common.confirmPassword'),\n    salutation: t('forms.stepFormLabels.salutation'),\n    gender: t('forms.stepFormLabels.gender'),\n    firstName: t('common.firstName'),\n    lastName: t('common.lastName'),\n    birthday: t('forms.stepFormLabels.birthday'),\n    phone: t('common.phone'),\n    email: t('common.email'),\n    address1: `${t('common.address')} 1`,\n    address2: `${t('common.address')} 2`,\n    zipCode: t('common.zipcode'),\n    city: t('common.city'),\n    country: t('common.country'),\n  };\n\n  const formValues = fields\n    .filter((item) => item.name !== 'prefix')\n    .map((item) => ({\n      name: formLabels[item.name],\n      value: String(item.name === 'birthday' && item.value ? item.value.format('YYYY-MM-DD') : item.value),\n    }));\n\n  const next = () => {\n    form.validateFields().then(() => {\n      setCurrent(current + 1);\n    });\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n\n  const onFinish = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      notificationController.success({ message: t('common.success') });\n      setIsLoading(false);\n      setCurrent(0);\n    }, 1500);\n  };\n\n  const steps = [\n    {\n      title: t('common.country'),\n    },\n    {\n      title: t('forms.stepFormLabels.info'),\n    },\n    {\n      title: t('forms.stepFormLabels.location'),\n    },\n    {\n      title: t('forms.stepFormLabels.confirm'),\n    },\n  ];\n\n  const formFieldsUi = [\n    <Step1 key=\"1\" />,\n    <Step2 key=\"2\" />,\n    <Step3 key=\"3\" />,\n    <Step4 key=\"4\" formValues={formValues} />,\n  ];\n\n  return (\n    <BaseForm\n      name=\"stepForm\"\n      form={form}\n      fields={fields}\n      onFieldsChange={(_, allFields) => {\n        const currentFields = allFields.map((item) => ({\n          name: Array.isArray(item.name) ? item.name[0] : '',\n          value: item.value,\n        }));\n        const uniqueData = mergeBy(fields, currentFields, 'name');\n        setFields(uniqueData);\n      }}\n    >\n      <Steps labelPlacement=\"vertical\" size=\"small\" current={current}>\n        {steps.map((item) => (\n          <Steps.Step key={item.title} title={item.title} description=\"\" />\n        ))}\n      </Steps>\n      <div>{formFieldsUi[current]}</div>\n      <div>\n        {current < steps.length - 1 && (\n          <Button type=\"primary\" onClick={() => next()}>\n            {t('forms.stepFormLabels.next')}\n          </Button>\n        )}\n        {current === steps.length - 1 && (\n          <Button type=\"primary\" onClick={onFinish} loading={isLoading}>\n            {t('forms.stepFormLabels.done')}\n          </Button>\n        )}\n        {current > 0 && (\n          <S.PrevButton type=\"default\" onClick={() => prev()}>\n            {t('forms.stepFormLabels.previous')}\n          </S.PrevButton>\n        )}\n      </div>\n    </BaseForm>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport { Card } from '@app/components/common/Card/Card';\nimport { DynamicForm } from '@app/components/forms/DynamicForm/DynamicForm';\nimport { ControlForm } from '@app/components/forms/ControlForm/ControlForm';\nimport { ValidationForm } from '@app/components/forms/ValidationForm/ValidationForm';\nimport { StepForm } from '@app/components/forms/StepForm/StepForm';\n\nconst AdvancedFormsPage: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <PageTitle>{t('common.advancedForms')}</PageTitle>\n      <Row gutter={[30, 30]}>\n        <Col xs={24} sm={24} xl={10}>\n          <Card id=\"validation form\" title={t('forms.validationForm')} padding=\"1.25rem\">\n            <ValidationForm />\n          </Card>\n        </Col>\n\n        <Col xs={24} sm={24} xl={14}>\n          <Row gutter={[30, 30]}>\n            <Col span={24}>\n              <Card id=\"control-form\" title={t('forms.controlForm')} padding=\"1.25rem\">\n                <ControlForm />\n              </Card>\n            </Col>\n            <Col span={24}>\n              <Card id=\"dynamic-form\" title={t('forms.dynamicForm')} padding=\"1.25rem\">\n                <DynamicForm />\n              </Card>\n            </Col>\n            <Col span={24}>\n              <Card id=\"step-form\" title={t('forms.stepForm')} padding=\"1.25rem\">\n                <StepForm />\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default AdvancedFormsPage;\n"],"sourceRoot":""}